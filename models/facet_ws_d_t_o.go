// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FacetWsDTO facet ws d t o
// swagger:model FacetWsDTO
type FacetWsDTO struct {

	// category
	Category bool `json:"category,omitempty"`

	// multi select
	MultiSelect bool `json:"multiSelect,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// priority
	Priority int32 `json:"priority,omitempty"`

	// top values
	TopValues []*FacetValueWsDTO `json:"topValues"`

	// values
	Values []*FacetValueWsDTO `json:"values"`

	// visible
	Visible bool `json:"visible,omitempty"`
}

// Validate validates this facet ws d t o
func (m *FacetWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTopValues(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FacetWsDTO) validateTopValues(formats strfmt.Registry) error {

	if swag.IsZero(m.TopValues) { // not required
		return nil
	}

	for i := 0; i < len(m.TopValues); i++ {
		if swag.IsZero(m.TopValues[i]) { // not required
			continue
		}

		if m.TopValues[i] != nil {
			if err := m.TopValues[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("topValues" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *FacetWsDTO) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(m.Values) { // not required
		return nil
	}

	for i := 0; i < len(m.Values); i++ {
		if swag.IsZero(m.Values[i]) { // not required
			continue
		}

		if m.Values[i] != nil {
			if err := m.Values[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("values" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *FacetWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FacetWsDTO) UnmarshalBinary(b []byte) error {
	var res FacetWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
