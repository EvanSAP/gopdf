// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProductListWsDTO product list ws d t o
// swagger:model ProductListWsDTO
type ProductListWsDTO struct {

	// catalog
	Catalog string `json:"catalog,omitempty"`

	// current page
	CurrentPage int32 `json:"currentPage,omitempty"`

	// products
	Products []*ProductWsDTO `json:"products"`

	// total page count
	TotalPageCount int32 `json:"totalPageCount,omitempty"`

	// total product count
	TotalProductCount int32 `json:"totalProductCount,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this product list ws d t o
func (m *ProductListWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductListWsDTO) validateProducts(formats strfmt.Registry) error {

	if swag.IsZero(m.Products) { // not required
		return nil
	}

	for i := 0; i < len(m.Products); i++ {
		if swag.IsZero(m.Products[i]) { // not required
			continue
		}

		if m.Products[i] != nil {
			if err := m.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProductListWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductListWsDTO) UnmarshalBinary(b []byte) error {
	var res ProductListWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
