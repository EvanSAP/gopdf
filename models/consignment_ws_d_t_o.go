// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConsignmentWsDTO consignment ws d t o
// swagger:model ConsignmentWsDTO
type ConsignmentWsDTO struct {

	// code
	Code string `json:"code,omitempty"`

	// delivery mode
	DeliveryMode *DeliveryModeWsDTO `json:"deliveryMode,omitempty"`

	// delivery point of service
	DeliveryPointOfService *PointOfServiceWsDTO `json:"deliveryPointOfService,omitempty"`

	// entries
	Entries []*ConsignmentEntryWsDTO `json:"entries"`

	// order code
	OrderCode string `json:"orderCode,omitempty"`

	// packaging info
	PackagingInfo *PackagingInfoWsDTO `json:"packagingInfo,omitempty"`

	// shipping address
	ShippingAddress *AddressWsDTO `json:"shippingAddress,omitempty"`

	// shipping date
	// Format: date-time
	ShippingDate CustomDateTime `json:"shippingDate,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// status date
	// Format: date-time
	StatusDate CustomDateTime `json:"statusDate,omitempty"`

	// tracking ID
	TrackingID string `json:"trackingID,omitempty"`

	// warehouse code
	WarehouseCode string `json:"warehouseCode,omitempty"`
}

// Validate validates this consignment ws d t o
func (m *ConsignmentWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeliveryMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeliveryPointOfService(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntries(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePackagingInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShippingDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConsignmentWsDTO) validateDeliveryMode(formats strfmt.Registry) error {

	if swag.IsZero(m.DeliveryMode) { // not required
		return nil
	}

	if m.DeliveryMode != nil {
		if err := m.DeliveryMode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deliveryMode")
			}
			return err
		}
	}

	return nil
}

func (m *ConsignmentWsDTO) validateDeliveryPointOfService(formats strfmt.Registry) error {

	if swag.IsZero(m.DeliveryPointOfService) { // not required
		return nil
	}

	if m.DeliveryPointOfService != nil {
		if err := m.DeliveryPointOfService.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deliveryPointOfService")
			}
			return err
		}
	}

	return nil
}

func (m *ConsignmentWsDTO) validateEntries(formats strfmt.Registry) error {

	if swag.IsZero(m.Entries) { // not required
		return nil
	}

	for i := 0; i < len(m.Entries); i++ {
		if swag.IsZero(m.Entries[i]) { // not required
			continue
		}

		if m.Entries[i] != nil {
			if err := m.Entries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ConsignmentWsDTO) validatePackagingInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.PackagingInfo) { // not required
		return nil
	}

	if m.PackagingInfo != nil {
		if err := m.PackagingInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("packagingInfo")
			}
			return err
		}
	}

	return nil
}

func (m *ConsignmentWsDTO) validateShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddress) { // not required
		return nil
	}

	if m.ShippingAddress != nil {
		if err := m.ShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shippingAddress")
			}
			return err
		}
	}

	return nil
}

func (m *ConsignmentWsDTO) validateShippingDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingDate) { // not required
		return nil
	}

	if err := validate.FormatOf("shippingDate", "body", "date-time", m.ShippingDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ConsignmentWsDTO) validateStatusDate(formats strfmt.Registry) error {

	if swag.IsZero(m.StatusDate) { // not required
		return nil
	}

	if err := validate.FormatOf("statusDate", "body", "date-time", m.StatusDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConsignmentWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConsignmentWsDTO) UnmarshalBinary(b []byte) error {
	var res ConsignmentWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
