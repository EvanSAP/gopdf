// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PriceWsDTO price ws d t o
// swagger:model PriceWsDTO
type PriceWsDTO struct {

	// currency iso
	CurrencyIso string `json:"currencyIso,omitempty"`

	// formatted value
	FormattedValue string `json:"formattedValue,omitempty"`

	// max quantity
	MaxQuantity int64 `json:"maxQuantity,omitempty"`

	// min quantity
	MinQuantity int64 `json:"minQuantity,omitempty"`

	// price type
	// Enum: [BUY FROM]
	PriceType string `json:"priceType,omitempty"`

	// value
	Value float64 `json:"value,omitempty"`
}

// Validate validates this price ws d t o
func (m *PriceWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePriceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var priceWsDTOTypePriceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BUY","FROM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		priceWsDTOTypePriceTypePropEnum = append(priceWsDTOTypePriceTypePropEnum, v)
	}
}

const (

	// PriceWsDTOPriceTypeBUY captures enum value "BUY"
	PriceWsDTOPriceTypeBUY string = "BUY"

	// PriceWsDTOPriceTypeFROM captures enum value "FROM"
	PriceWsDTOPriceTypeFROM string = "FROM"
)

// prop value enum
func (m *PriceWsDTO) validatePriceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, priceWsDTOTypePriceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PriceWsDTO) validatePriceType(formats strfmt.Registry) error {

	if swag.IsZero(m.PriceType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePriceTypeEnum("priceType", "body", m.PriceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PriceWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PriceWsDTO) UnmarshalBinary(b []byte) error {
	var res PriceWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
