// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PaymentDetailsWsDTO payment details ws d t o
// swagger:model PaymentDetailsWsDTO
type PaymentDetailsWsDTO struct {

	// account holder name
	AccountHolderName string `json:"accountHolderName,omitempty"`

	// billing address
	BillingAddress *AddressWsDTO `json:"billingAddress,omitempty"`

	// card number
	CardNumber string `json:"cardNumber,omitempty"`

	// card type
	CardType *CardTypeWsDTO `json:"cardType,omitempty"`

	// default payment
	DefaultPayment bool `json:"defaultPayment,omitempty"`

	// expiry month
	ExpiryMonth string `json:"expiryMonth,omitempty"`

	// expiry year
	ExpiryYear string `json:"expiryYear,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// issue number
	IssueNumber string `json:"issueNumber,omitempty"`

	// saved
	Saved bool `json:"saved,omitempty"`

	// start month
	StartMonth string `json:"startMonth,omitempty"`

	// start year
	StartYear string `json:"startYear,omitempty"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`
}

// Validate validates this payment details ws d t o
func (m *PaymentDetailsWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCardType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PaymentDetailsWsDTO) validateBillingAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.BillingAddress) { // not required
		return nil
	}

	if m.BillingAddress != nil {
		if err := m.BillingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("billingAddress")
			}
			return err
		}
	}

	return nil
}

func (m *PaymentDetailsWsDTO) validateCardType(formats strfmt.Registry) error {

	if swag.IsZero(m.CardType) { // not required
		return nil
	}

	if m.CardType != nil {
		if err := m.CardType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cardType")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PaymentDetailsWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PaymentDetailsWsDTO) UnmarshalBinary(b []byte) error {
	var res PaymentDetailsWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
