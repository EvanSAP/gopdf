// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OpeningScheduleWsDTO opening schedule ws d t o
// swagger:model OpeningScheduleWsDTO
type OpeningScheduleWsDTO struct {

	// code
	Code string `json:"code,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// special day opening list
	SpecialDayOpeningList []*SpecialOpeningDayWsDTO `json:"specialDayOpeningList"`

	// week day opening list
	WeekDayOpeningList []*WeekdayOpeningDayWsDTO `json:"weekDayOpeningList"`
}

// Validate validates this opening schedule ws d t o
func (m *OpeningScheduleWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSpecialDayOpeningList(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWeekDayOpeningList(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OpeningScheduleWsDTO) validateSpecialDayOpeningList(formats strfmt.Registry) error {

	if swag.IsZero(m.SpecialDayOpeningList) { // not required
		return nil
	}

	for i := 0; i < len(m.SpecialDayOpeningList); i++ {
		if swag.IsZero(m.SpecialDayOpeningList[i]) { // not required
			continue
		}

		if m.SpecialDayOpeningList[i] != nil {
			if err := m.SpecialDayOpeningList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("specialDayOpeningList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OpeningScheduleWsDTO) validateWeekDayOpeningList(formats strfmt.Registry) error {

	if swag.IsZero(m.WeekDayOpeningList) { // not required
		return nil
	}

	for i := 0; i < len(m.WeekDayOpeningList); i++ {
		if swag.IsZero(m.WeekDayOpeningList[i]) { // not required
			continue
		}

		if m.WeekDayOpeningList[i] != nil {
			if err := m.WeekDayOpeningList[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("weekDayOpeningList" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *OpeningScheduleWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpeningScheduleWsDTO) UnmarshalBinary(b []byte) error {
	var res OpeningScheduleWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
