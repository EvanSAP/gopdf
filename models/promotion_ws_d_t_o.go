// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PromotionWsDTO promotion ws d t o
// swagger:model PromotionWsDTO
type PromotionWsDTO struct {

	// code
	Code string `json:"code,omitempty"`

	// could fire messages
	CouldFireMessages []string `json:"couldFireMessages"`

	// description
	Description string `json:"description,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// end date
	// Format: date-time
	EndDate CustomDateTime `json:"endDate,omitempty"`

	// fired messages
	FiredMessages []string `json:"firedMessages"`

	// priority
	Priority int32 `json:"priority,omitempty"`

	// product banner
	ProductBanner *ImageWsDTO `json:"productBanner,omitempty"`

	// promotion group
	PromotionGroup string `json:"promotionGroup,omitempty"`

	// promotion type
	PromotionType string `json:"promotionType,omitempty"`

	// restrictions
	Restrictions []*PromotionRestrictionWsDTO `json:"restrictions"`

	// start date
	// Format: date-time
	StartDate CustomDateTime `json:"startDate,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this promotion ws d t o
func (m *PromotionWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProductBanner(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRestrictions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PromotionWsDTO) validateEndDate(formats strfmt.Registry) error {

	if swag.IsZero(m.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", m.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PromotionWsDTO) validateProductBanner(formats strfmt.Registry) error {

	if swag.IsZero(m.ProductBanner) { // not required
		return nil
	}

	if m.ProductBanner != nil {
		if err := m.ProductBanner.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("productBanner")
			}
			return err
		}
	}

	return nil
}

func (m *PromotionWsDTO) validateRestrictions(formats strfmt.Registry) error {

	if swag.IsZero(m.Restrictions) { // not required
		return nil
	}

	for i := 0; i < len(m.Restrictions); i++ {
		if swag.IsZero(m.Restrictions[i]) { // not required
			continue
		}

		if m.Restrictions[i] != nil {
			if err := m.Restrictions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("restrictions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *PromotionWsDTO) validateStartDate(formats strfmt.Registry) error {

	if swag.IsZero(m.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", m.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PromotionWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PromotionWsDTO) UnmarshalBinary(b []byte) error {
	var res PromotionWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
