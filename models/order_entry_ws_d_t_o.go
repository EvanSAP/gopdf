// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrderEntryWsDTO order entry ws d t o
// swagger:model OrderEntryWsDTO
type OrderEntryWsDTO struct {

	// base price
	BasePrice *PriceWsDTO `json:"basePrice,omitempty"`

	// configuration infos
	ConfigurationInfos []*ConfigurationInfoWsDTO `json:"configurationInfos"`

	// delivery mode
	DeliveryMode *DeliveryModeWsDTO `json:"deliveryMode,omitempty"`

	// delivery point of service
	DeliveryPointOfService *PointOfServiceWsDTO `json:"deliveryPointOfService,omitempty"`

	// entry number
	EntryNumber int32 `json:"entryNumber,omitempty"`

	// product
	Product *ProductWsDTO `json:"product,omitempty"`

	// quantity
	Quantity int64 `json:"quantity,omitempty"`

	// quantity allocated
	QuantityAllocated int64 `json:"quantityAllocated,omitempty"`

	// quantity cancelled
	QuantityCancelled int64 `json:"quantityCancelled,omitempty"`

	// quantity pending
	QuantityPending int64 `json:"quantityPending,omitempty"`

	// quantity returned
	QuantityReturned int64 `json:"quantityReturned,omitempty"`

	// quantity shipped
	QuantityShipped int64 `json:"quantityShipped,omitempty"`

	// quantity unallocated
	QuantityUnallocated int64 `json:"quantityUnallocated,omitempty"`

	// total price
	TotalPrice *PriceWsDTO `json:"totalPrice,omitempty"`

	// updateable
	Updateable bool `json:"updateable,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this order entry ws d t o
func (m *OrderEntryWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBasePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateConfigurationInfos(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeliveryMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeliveryPointOfService(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProduct(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPrice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderEntryWsDTO) validateBasePrice(formats strfmt.Registry) error {

	if swag.IsZero(m.BasePrice) { // not required
		return nil
	}

	if m.BasePrice != nil {
		if err := m.BasePrice.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("basePrice")
			}
			return err
		}
	}

	return nil
}

func (m *OrderEntryWsDTO) validateConfigurationInfos(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfigurationInfos) { // not required
		return nil
	}

	for i := 0; i < len(m.ConfigurationInfos); i++ {
		if swag.IsZero(m.ConfigurationInfos[i]) { // not required
			continue
		}

		if m.ConfigurationInfos[i] != nil {
			if err := m.ConfigurationInfos[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("configurationInfos" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OrderEntryWsDTO) validateDeliveryMode(formats strfmt.Registry) error {

	if swag.IsZero(m.DeliveryMode) { // not required
		return nil
	}

	if m.DeliveryMode != nil {
		if err := m.DeliveryMode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deliveryMode")
			}
			return err
		}
	}

	return nil
}

func (m *OrderEntryWsDTO) validateDeliveryPointOfService(formats strfmt.Registry) error {

	if swag.IsZero(m.DeliveryPointOfService) { // not required
		return nil
	}

	if m.DeliveryPointOfService != nil {
		if err := m.DeliveryPointOfService.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deliveryPointOfService")
			}
			return err
		}
	}

	return nil
}

func (m *OrderEntryWsDTO) validateProduct(formats strfmt.Registry) error {

	if swag.IsZero(m.Product) { // not required
		return nil
	}

	if m.Product != nil {
		if err := m.Product.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("product")
			}
			return err
		}
	}

	return nil
}

func (m *OrderEntryWsDTO) validateTotalPrice(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPrice) { // not required
		return nil
	}

	if m.TotalPrice != nil {
		if err := m.TotalPrice.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("totalPrice")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OrderEntryWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderEntryWsDTO) UnmarshalBinary(b []byte) error {
	var res OrderEntryWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
