// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProductSearchPageWsDTO product search page ws d t o
// swagger:model ProductSearchPageWsDTO
type ProductSearchPageWsDTO struct {

	// breadcrumbs
	Breadcrumbs []*BreadcrumbWsDTO `json:"breadcrumbs"`

	// category code
	CategoryCode string `json:"categoryCode,omitempty"`

	// current query
	CurrentQuery *SearchStateWsDTO `json:"currentQuery,omitempty"`

	// facets
	Facets []*FacetWsDTO `json:"facets"`

	// free text search
	FreeTextSearch string `json:"freeTextSearch,omitempty"`

	// keyword redirect Url
	KeywordRedirectURL string `json:"keywordRedirectUrl,omitempty"`

	// pagination
	Pagination *PaginationWsDTO `json:"pagination,omitempty"`

	// products
	Products []*ProductWsDTO `json:"products"`

	// sorts
	Sorts []*SortWsDTO `json:"sorts"`

	// spelling suggestion
	SpellingSuggestion *SpellingSuggestionWsDTO `json:"spellingSuggestion,omitempty"`
}

// Validate validates this product search page ws d t o
func (m *ProductSearchPageWsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBreadcrumbs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCurrentQuery(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFacets(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePagination(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSorts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpellingSuggestion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductSearchPageWsDTO) validateBreadcrumbs(formats strfmt.Registry) error {

	if swag.IsZero(m.Breadcrumbs) { // not required
		return nil
	}

	for i := 0; i < len(m.Breadcrumbs); i++ {
		if swag.IsZero(m.Breadcrumbs[i]) { // not required
			continue
		}

		if m.Breadcrumbs[i] != nil {
			if err := m.Breadcrumbs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("breadcrumbs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProductSearchPageWsDTO) validateCurrentQuery(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentQuery) { // not required
		return nil
	}

	if m.CurrentQuery != nil {
		if err := m.CurrentQuery.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("currentQuery")
			}
			return err
		}
	}

	return nil
}

func (m *ProductSearchPageWsDTO) validateFacets(formats strfmt.Registry) error {

	if swag.IsZero(m.Facets) { // not required
		return nil
	}

	for i := 0; i < len(m.Facets); i++ {
		if swag.IsZero(m.Facets[i]) { // not required
			continue
		}

		if m.Facets[i] != nil {
			if err := m.Facets[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("facets" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProductSearchPageWsDTO) validatePagination(formats strfmt.Registry) error {

	if swag.IsZero(m.Pagination) { // not required
		return nil
	}

	if m.Pagination != nil {
		if err := m.Pagination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pagination")
			}
			return err
		}
	}

	return nil
}

func (m *ProductSearchPageWsDTO) validateProducts(formats strfmt.Registry) error {

	if swag.IsZero(m.Products) { // not required
		return nil
	}

	for i := 0; i < len(m.Products); i++ {
		if swag.IsZero(m.Products[i]) { // not required
			continue
		}

		if m.Products[i] != nil {
			if err := m.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProductSearchPageWsDTO) validateSorts(formats strfmt.Registry) error {

	if swag.IsZero(m.Sorts) { // not required
		return nil
	}

	for i := 0; i < len(m.Sorts); i++ {
		if swag.IsZero(m.Sorts[i]) { // not required
			continue
		}

		if m.Sorts[i] != nil {
			if err := m.Sorts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sorts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ProductSearchPageWsDTO) validateSpellingSuggestion(formats strfmt.Registry) error {

	if swag.IsZero(m.SpellingSuggestion) { // not required
		return nil
	}

	if m.SpellingSuggestion != nil {
		if err := m.SpellingSuggestion.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("spellingSuggestion")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProductSearchPageWsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductSearchPageWsDTO) UnmarshalBinary(b []byte) error {
	var res ProductSearchPageWsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
