// Code generated by go-swagger; DO NOT EDIT.

package save_cart

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetSavedCartUsingGETReader is a Reader for the GetSavedCartUsingGET structure.
type GetSavedCartUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSavedCartUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSavedCartUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSavedCartUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSavedCartUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSavedCartUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSavedCartUsingGETOK creates a GetSavedCartUsingGETOK with default headers values
func NewGetSavedCartUsingGETOK() *GetSavedCartUsingGETOK {
	return &GetSavedCartUsingGETOK{}
}

/*GetSavedCartUsingGETOK handles this case with default header values.

OK
*/
type GetSavedCartUsingGETOK struct {
	Payload *models.SaveCartResultWsDTO
}

func (o *GetSavedCartUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/savedcart][%d] getSavedCartUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetSavedCartUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SaveCartResultWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedCartUsingGETUnauthorized creates a GetSavedCartUsingGETUnauthorized with default headers values
func NewGetSavedCartUsingGETUnauthorized() *GetSavedCartUsingGETUnauthorized {
	return &GetSavedCartUsingGETUnauthorized{}
}

/*GetSavedCartUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSavedCartUsingGETUnauthorized struct {
}

func (o *GetSavedCartUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/savedcart][%d] getSavedCartUsingGETUnauthorized ", 401)
}

func (o *GetSavedCartUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSavedCartUsingGETForbidden creates a GetSavedCartUsingGETForbidden with default headers values
func NewGetSavedCartUsingGETForbidden() *GetSavedCartUsingGETForbidden {
	return &GetSavedCartUsingGETForbidden{}
}

/*GetSavedCartUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetSavedCartUsingGETForbidden struct {
}

func (o *GetSavedCartUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/savedcart][%d] getSavedCartUsingGETForbidden ", 403)
}

func (o *GetSavedCartUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSavedCartUsingGETNotFound creates a GetSavedCartUsingGETNotFound with default headers values
func NewGetSavedCartUsingGETNotFound() *GetSavedCartUsingGETNotFound {
	return &GetSavedCartUsingGETNotFound{}
}

/*GetSavedCartUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetSavedCartUsingGETNotFound struct {
}

func (o *GetSavedCartUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/savedcart][%d] getSavedCartUsingGETNotFound ", 404)
}

func (o *GetSavedCartUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
