// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// SearchProductsUsingGETReader is a Reader for the SearchProductsUsingGET structure.
type SearchProductsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchProductsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchProductsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSearchProductsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSearchProductsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSearchProductsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchProductsUsingGETOK creates a SearchProductsUsingGETOK with default headers values
func NewSearchProductsUsingGETOK() *SearchProductsUsingGETOK {
	return &SearchProductsUsingGETOK{}
}

/*SearchProductsUsingGETOK handles this case with default header values.

OK
*/
type SearchProductsUsingGETOK struct {
	Payload *models.ProductSearchPageWsDTO
}

func (o *SearchProductsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/search][%d] searchProductsUsingGETOK  %+v", 200, o.Payload)
}

func (o *SearchProductsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductSearchPageWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchProductsUsingGETUnauthorized creates a SearchProductsUsingGETUnauthorized with default headers values
func NewSearchProductsUsingGETUnauthorized() *SearchProductsUsingGETUnauthorized {
	return &SearchProductsUsingGETUnauthorized{}
}

/*SearchProductsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type SearchProductsUsingGETUnauthorized struct {
}

func (o *SearchProductsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/search][%d] searchProductsUsingGETUnauthorized ", 401)
}

func (o *SearchProductsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchProductsUsingGETForbidden creates a SearchProductsUsingGETForbidden with default headers values
func NewSearchProductsUsingGETForbidden() *SearchProductsUsingGETForbidden {
	return &SearchProductsUsingGETForbidden{}
}

/*SearchProductsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type SearchProductsUsingGETForbidden struct {
}

func (o *SearchProductsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/search][%d] searchProductsUsingGETForbidden ", 403)
}

func (o *SearchProductsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchProductsUsingGETNotFound creates a SearchProductsUsingGETNotFound with default headers values
func NewSearchProductsUsingGETNotFound() *SearchProductsUsingGETNotFound {
	return &SearchProductsUsingGETNotFound{}
}

/*SearchProductsUsingGETNotFound handles this case with default header values.

Not Found
*/
type SearchProductsUsingGETNotFound struct {
}

func (o *SearchProductsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/search][%d] searchProductsUsingGETNotFound ", 404)
}

func (o *SearchProductsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
