// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetProductByCodeUsingGETReader is a Reader for the GetProductByCodeUsingGET structure.
type GetProductByCodeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProductByCodeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetProductByCodeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetProductByCodeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetProductByCodeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetProductByCodeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProductByCodeUsingGETOK creates a GetProductByCodeUsingGETOK with default headers values
func NewGetProductByCodeUsingGETOK() *GetProductByCodeUsingGETOK {
	return &GetProductByCodeUsingGETOK{}
}

/*GetProductByCodeUsingGETOK handles this case with default header values.

OK
*/
type GetProductByCodeUsingGETOK struct {
	Payload *models.ProductWsDTO
}

func (o *GetProductByCodeUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/{productCode}][%d] getProductByCodeUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProductByCodeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductByCodeUsingGETUnauthorized creates a GetProductByCodeUsingGETUnauthorized with default headers values
func NewGetProductByCodeUsingGETUnauthorized() *GetProductByCodeUsingGETUnauthorized {
	return &GetProductByCodeUsingGETUnauthorized{}
}

/*GetProductByCodeUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetProductByCodeUsingGETUnauthorized struct {
}

func (o *GetProductByCodeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/{productCode}][%d] getProductByCodeUsingGETUnauthorized ", 401)
}

func (o *GetProductByCodeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductByCodeUsingGETForbidden creates a GetProductByCodeUsingGETForbidden with default headers values
func NewGetProductByCodeUsingGETForbidden() *GetProductByCodeUsingGETForbidden {
	return &GetProductByCodeUsingGETForbidden{}
}

/*GetProductByCodeUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetProductByCodeUsingGETForbidden struct {
}

func (o *GetProductByCodeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/{productCode}][%d] getProductByCodeUsingGETForbidden ", 403)
}

func (o *GetProductByCodeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductByCodeUsingGETNotFound creates a GetProductByCodeUsingGETNotFound with default headers values
func NewGetProductByCodeUsingGETNotFound() *GetProductByCodeUsingGETNotFound {
	return &GetProductByCodeUsingGETNotFound{}
}

/*GetProductByCodeUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetProductByCodeUsingGETNotFound struct {
}

func (o *GetProductByCodeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/products/{productCode}][%d] getProductByCodeUsingGETNotFound ", 404)
}

func (o *GetProductByCodeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
