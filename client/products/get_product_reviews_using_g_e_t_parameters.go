// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"golang.org/x/net/context"
)

// NewGetProductReviewsUsingGETParams creates a new GetProductReviewsUsingGETParams object
// with the default values initialized.
func NewGetProductReviewsUsingGETParams() *GetProductReviewsUsingGETParams {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &GetProductReviewsUsingGETParams{
		Fields: &fieldsDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetProductReviewsUsingGETParamsWithTimeout creates a new GetProductReviewsUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetProductReviewsUsingGETParamsWithTimeout(timeout time.Duration) *GetProductReviewsUsingGETParams {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &GetProductReviewsUsingGETParams{
		Fields: &fieldsDefault,

		timeout: timeout,
	}
}

// NewGetProductReviewsUsingGETParamsWithContext creates a new GetProductReviewsUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetProductReviewsUsingGETParamsWithContext(ctx context.Context) *GetProductReviewsUsingGETParams {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &GetProductReviewsUsingGETParams{
		Fields: &fieldsDefault,

		Context: ctx,
	}
}

// NewGetProductReviewsUsingGETParamsWithHTTPClient creates a new GetProductReviewsUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetProductReviewsUsingGETParamsWithHTTPClient(client *http.Client) *GetProductReviewsUsingGETParams {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &GetProductReviewsUsingGETParams{
		Fields:     &fieldsDefault,
		HTTPClient: client,
	}
}

/*GetProductReviewsUsingGETParams contains all the parameters to send to the API endpoint
for the get product reviews using g e t operation typically these are written to a http.Request
*/
type GetProductReviewsUsingGETParams struct {

	/*BaseSiteID
	  Base site identifier

	*/
	BaseSiteID string
	/*Fields
	  Response configuration. This is the list of fields that should be returned in the response body.

	*/
	Fields *string
	/*MaxCount
	  Maximum count of reviews

	*/
	MaxCount *int32
	/*ProductCode
	  Product identifier

	*/
	ProductCode string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithTimeout(timeout time.Duration) *GetProductReviewsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithContext(ctx context.Context) *GetProductReviewsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithHTTPClient(client *http.Client) *GetProductReviewsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseSiteID adds the baseSiteID to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithBaseSiteID(baseSiteID string) *GetProductReviewsUsingGETParams {
	o.SetBaseSiteID(baseSiteID)
	return o
}

// SetBaseSiteID adds the baseSiteId to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetBaseSiteID(baseSiteID string) {
	o.BaseSiteID = baseSiteID
}

// WithFields adds the fields to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithFields(fields *string) *GetProductReviewsUsingGETParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithMaxCount adds the maxCount to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithMaxCount(maxCount *int32) *GetProductReviewsUsingGETParams {
	o.SetMaxCount(maxCount)
	return o
}

// SetMaxCount adds the maxCount to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetMaxCount(maxCount *int32) {
	o.MaxCount = maxCount
}

// WithProductCode adds the productCode to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) WithProductCode(productCode string) *GetProductReviewsUsingGETParams {
	o.SetProductCode(productCode)
	return o
}

// SetProductCode adds the productCode to the get product reviews using g e t params
func (o *GetProductReviewsUsingGETParams) SetProductCode(productCode string) {
	o.ProductCode = productCode
}

// WriteToRequest writes these params to a swagger request
func (o *GetProductReviewsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param baseSiteId
	if err := r.SetPathParam("baseSiteId", o.BaseSiteID); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.MaxCount != nil {

		// query param maxCount
		var qrMaxCount int32
		if o.MaxCount != nil {
			qrMaxCount = *o.MaxCount
		}
		qMaxCount := swag.FormatInt32(qrMaxCount)
		if qMaxCount != "" {
			if err := r.SetQueryParam("maxCount", qMaxCount); err != nil {
				return err
			}
		}

	}

	// path param productCode
	if err := r.SetPathParam("productCode", o.ProductCode); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
