// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetAllCustomerGroupsForCustomerUsingGETReader is a Reader for the GetAllCustomerGroupsForCustomerUsingGET structure.
type GetAllCustomerGroupsForCustomerUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllCustomerGroupsForCustomerUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllCustomerGroupsForCustomerUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAllCustomerGroupsForCustomerUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAllCustomerGroupsForCustomerUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAllCustomerGroupsForCustomerUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllCustomerGroupsForCustomerUsingGETOK creates a GetAllCustomerGroupsForCustomerUsingGETOK with default headers values
func NewGetAllCustomerGroupsForCustomerUsingGETOK() *GetAllCustomerGroupsForCustomerUsingGETOK {
	return &GetAllCustomerGroupsForCustomerUsingGETOK{}
}

/*GetAllCustomerGroupsForCustomerUsingGETOK handles this case with default header values.

OK
*/
type GetAllCustomerGroupsForCustomerUsingGETOK struct {
	Payload *models.UserGroupListWsDTO
}

func (o *GetAllCustomerGroupsForCustomerUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/customergroups][%d] getAllCustomerGroupsForCustomerUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllCustomerGroupsForCustomerUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroupListWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllCustomerGroupsForCustomerUsingGETUnauthorized creates a GetAllCustomerGroupsForCustomerUsingGETUnauthorized with default headers values
func NewGetAllCustomerGroupsForCustomerUsingGETUnauthorized() *GetAllCustomerGroupsForCustomerUsingGETUnauthorized {
	return &GetAllCustomerGroupsForCustomerUsingGETUnauthorized{}
}

/*GetAllCustomerGroupsForCustomerUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllCustomerGroupsForCustomerUsingGETUnauthorized struct {
}

func (o *GetAllCustomerGroupsForCustomerUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/customergroups][%d] getAllCustomerGroupsForCustomerUsingGETUnauthorized ", 401)
}

func (o *GetAllCustomerGroupsForCustomerUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllCustomerGroupsForCustomerUsingGETForbidden creates a GetAllCustomerGroupsForCustomerUsingGETForbidden with default headers values
func NewGetAllCustomerGroupsForCustomerUsingGETForbidden() *GetAllCustomerGroupsForCustomerUsingGETForbidden {
	return &GetAllCustomerGroupsForCustomerUsingGETForbidden{}
}

/*GetAllCustomerGroupsForCustomerUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllCustomerGroupsForCustomerUsingGETForbidden struct {
}

func (o *GetAllCustomerGroupsForCustomerUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/customergroups][%d] getAllCustomerGroupsForCustomerUsingGETForbidden ", 403)
}

func (o *GetAllCustomerGroupsForCustomerUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllCustomerGroupsForCustomerUsingGETNotFound creates a GetAllCustomerGroupsForCustomerUsingGETNotFound with default headers values
func NewGetAllCustomerGroupsForCustomerUsingGETNotFound() *GetAllCustomerGroupsForCustomerUsingGETNotFound {
	return &GetAllCustomerGroupsForCustomerUsingGETNotFound{}
}

/*GetAllCustomerGroupsForCustomerUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllCustomerGroupsForCustomerUsingGETNotFound struct {
}

func (o *GetAllCustomerGroupsForCustomerUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/customergroups][%d] getAllCustomerGroupsForCustomerUsingGETNotFound ", 404)
}

func (o *GetAllCustomerGroupsForCustomerUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
