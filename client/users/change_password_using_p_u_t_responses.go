// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// ChangePasswordUsingPUTReader is a Reader for the ChangePasswordUsingPUT structure.
type ChangePasswordUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangePasswordUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewChangePasswordUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewChangePasswordUsingPUTAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewChangePasswordUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangePasswordUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangePasswordUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangePasswordUsingPUTCreated creates a ChangePasswordUsingPUTCreated with default headers values
func NewChangePasswordUsingPUTCreated() *ChangePasswordUsingPUTCreated {
	return &ChangePasswordUsingPUTCreated{}
}

/*ChangePasswordUsingPUTCreated handles this case with default header values.

Created
*/
type ChangePasswordUsingPUTCreated struct {
}

func (o *ChangePasswordUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/password][%d] changePasswordUsingPUTCreated ", 201)
}

func (o *ChangePasswordUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangePasswordUsingPUTAccepted creates a ChangePasswordUsingPUTAccepted with default headers values
func NewChangePasswordUsingPUTAccepted() *ChangePasswordUsingPUTAccepted {
	return &ChangePasswordUsingPUTAccepted{}
}

/*ChangePasswordUsingPUTAccepted handles this case with default header values.

Accepted
*/
type ChangePasswordUsingPUTAccepted struct {
}

func (o *ChangePasswordUsingPUTAccepted) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/password][%d] changePasswordUsingPUTAccepted ", 202)
}

func (o *ChangePasswordUsingPUTAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangePasswordUsingPUTUnauthorized creates a ChangePasswordUsingPUTUnauthorized with default headers values
func NewChangePasswordUsingPUTUnauthorized() *ChangePasswordUsingPUTUnauthorized {
	return &ChangePasswordUsingPUTUnauthorized{}
}

/*ChangePasswordUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type ChangePasswordUsingPUTUnauthorized struct {
}

func (o *ChangePasswordUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/password][%d] changePasswordUsingPUTUnauthorized ", 401)
}

func (o *ChangePasswordUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangePasswordUsingPUTForbidden creates a ChangePasswordUsingPUTForbidden with default headers values
func NewChangePasswordUsingPUTForbidden() *ChangePasswordUsingPUTForbidden {
	return &ChangePasswordUsingPUTForbidden{}
}

/*ChangePasswordUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type ChangePasswordUsingPUTForbidden struct {
}

func (o *ChangePasswordUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/password][%d] changePasswordUsingPUTForbidden ", 403)
}

func (o *ChangePasswordUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangePasswordUsingPUTNotFound creates a ChangePasswordUsingPUTNotFound with default headers values
func NewChangePasswordUsingPUTNotFound() *ChangePasswordUsingPUTNotFound {
	return &ChangePasswordUsingPUTNotFound{}
}

/*ChangePasswordUsingPUTNotFound handles this case with default header values.

Not Found
*/
type ChangePasswordUsingPUTNotFound struct {
}

func (o *ChangePasswordUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/password][%d] changePasswordUsingPUTNotFound ", 404)
}

func (o *ChangePasswordUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
