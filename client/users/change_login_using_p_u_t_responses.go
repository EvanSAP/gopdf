// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// ChangeLoginUsingPUTReader is a Reader for the ChangeLoginUsingPUT structure.
type ChangeLoginUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeLoginUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeLoginUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewChangeLoginUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewChangeLoginUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewChangeLoginUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewChangeLoginUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeLoginUsingPUTOK creates a ChangeLoginUsingPUTOK with default headers values
func NewChangeLoginUsingPUTOK() *ChangeLoginUsingPUTOK {
	return &ChangeLoginUsingPUTOK{}
}

/*ChangeLoginUsingPUTOK handles this case with default header values.

OK
*/
type ChangeLoginUsingPUTOK struct {
}

func (o *ChangeLoginUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/login][%d] changeLoginUsingPUTOK ", 200)
}

func (o *ChangeLoginUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeLoginUsingPUTCreated creates a ChangeLoginUsingPUTCreated with default headers values
func NewChangeLoginUsingPUTCreated() *ChangeLoginUsingPUTCreated {
	return &ChangeLoginUsingPUTCreated{}
}

/*ChangeLoginUsingPUTCreated handles this case with default header values.

Created
*/
type ChangeLoginUsingPUTCreated struct {
}

func (o *ChangeLoginUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/login][%d] changeLoginUsingPUTCreated ", 201)
}

func (o *ChangeLoginUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeLoginUsingPUTUnauthorized creates a ChangeLoginUsingPUTUnauthorized with default headers values
func NewChangeLoginUsingPUTUnauthorized() *ChangeLoginUsingPUTUnauthorized {
	return &ChangeLoginUsingPUTUnauthorized{}
}

/*ChangeLoginUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type ChangeLoginUsingPUTUnauthorized struct {
}

func (o *ChangeLoginUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/login][%d] changeLoginUsingPUTUnauthorized ", 401)
}

func (o *ChangeLoginUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeLoginUsingPUTForbidden creates a ChangeLoginUsingPUTForbidden with default headers values
func NewChangeLoginUsingPUTForbidden() *ChangeLoginUsingPUTForbidden {
	return &ChangeLoginUsingPUTForbidden{}
}

/*ChangeLoginUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type ChangeLoginUsingPUTForbidden struct {
}

func (o *ChangeLoginUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/login][%d] changeLoginUsingPUTForbidden ", 403)
}

func (o *ChangeLoginUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeLoginUsingPUTNotFound creates a ChangeLoginUsingPUTNotFound with default headers values
func NewChangeLoginUsingPUTNotFound() *ChangeLoginUsingPUTNotFound {
	return &ChangeLoginUsingPUTNotFound{}
}

/*ChangeLoginUsingPUTNotFound handles this case with default header values.

Not Found
*/
type ChangeLoginUsingPUTNotFound struct {
}

func (o *ChangeLoginUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/login][%d] changeLoginUsingPUTNotFound ", 404)
}

func (o *ChangeLoginUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
