// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PutUserUsingPUT1Reader is a Reader for the PutUserUsingPUT1 structure.
type PutUserUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutUserUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPutUserUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutUserUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutUserUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutUserUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUserUsingPUT1OK creates a PutUserUsingPUT1OK with default headers values
func NewPutUserUsingPUT1OK() *PutUserUsingPUT1OK {
	return &PutUserUsingPUT1OK{}
}

/*PutUserUsingPUT1OK handles this case with default header values.

OK
*/
type PutUserUsingPUT1OK struct {
}

func (o *PutUserUsingPUT1OK) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}][%d] putUserUsingPUT1OK ", 200)
}

func (o *PutUserUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserUsingPUT1Created creates a PutUserUsingPUT1Created with default headers values
func NewPutUserUsingPUT1Created() *PutUserUsingPUT1Created {
	return &PutUserUsingPUT1Created{}
}

/*PutUserUsingPUT1Created handles this case with default header values.

Created
*/
type PutUserUsingPUT1Created struct {
}

func (o *PutUserUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}][%d] putUserUsingPUT1Created ", 201)
}

func (o *PutUserUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserUsingPUT1Unauthorized creates a PutUserUsingPUT1Unauthorized with default headers values
func NewPutUserUsingPUT1Unauthorized() *PutUserUsingPUT1Unauthorized {
	return &PutUserUsingPUT1Unauthorized{}
}

/*PutUserUsingPUT1Unauthorized handles this case with default header values.

Unauthorized
*/
type PutUserUsingPUT1Unauthorized struct {
}

func (o *PutUserUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}][%d] putUserUsingPUT1Unauthorized ", 401)
}

func (o *PutUserUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserUsingPUT1Forbidden creates a PutUserUsingPUT1Forbidden with default headers values
func NewPutUserUsingPUT1Forbidden() *PutUserUsingPUT1Forbidden {
	return &PutUserUsingPUT1Forbidden{}
}

/*PutUserUsingPUT1Forbidden handles this case with default header values.

Forbidden
*/
type PutUserUsingPUT1Forbidden struct {
}

func (o *PutUserUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}][%d] putUserUsingPUT1Forbidden ", 403)
}

func (o *PutUserUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutUserUsingPUT1NotFound creates a PutUserUsingPUT1NotFound with default headers values
func NewPutUserUsingPUT1NotFound() *PutUserUsingPUT1NotFound {
	return &PutUserUsingPUT1NotFound{}
}

/*PutUserUsingPUT1NotFound handles this case with default header values.

Not Found
*/
type PutUserUsingPUT1NotFound struct {
}

func (o *PutUserUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}][%d] putUserUsingPUT1NotFound ", 404)
}

func (o *PutUserUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
