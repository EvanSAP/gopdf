// Code generated by go-swagger; DO NOT EDIT.

package merchant_callback

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// HandleMerchantCallbackUsingPOSTReader is a Reader for the HandleMerchantCallbackUsingPOST structure.
type HandleMerchantCallbackUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HandleMerchantCallbackUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewHandleMerchantCallbackUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewHandleMerchantCallbackUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewHandleMerchantCallbackUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewHandleMerchantCallbackUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewHandleMerchantCallbackUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHandleMerchantCallbackUsingPOSTOK creates a HandleMerchantCallbackUsingPOSTOK with default headers values
func NewHandleMerchantCallbackUsingPOSTOK() *HandleMerchantCallbackUsingPOSTOK {
	return &HandleMerchantCallbackUsingPOSTOK{}
}

/*HandleMerchantCallbackUsingPOSTOK handles this case with default header values.

OK
*/
type HandleMerchantCallbackUsingPOSTOK struct {
}

func (o *HandleMerchantCallbackUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/integration/merchant_callback][%d] handleMerchantCallbackUsingPOSTOK ", 200)
}

func (o *HandleMerchantCallbackUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleMerchantCallbackUsingPOSTCreated creates a HandleMerchantCallbackUsingPOSTCreated with default headers values
func NewHandleMerchantCallbackUsingPOSTCreated() *HandleMerchantCallbackUsingPOSTCreated {
	return &HandleMerchantCallbackUsingPOSTCreated{}
}

/*HandleMerchantCallbackUsingPOSTCreated handles this case with default header values.

Created
*/
type HandleMerchantCallbackUsingPOSTCreated struct {
}

func (o *HandleMerchantCallbackUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/integration/merchant_callback][%d] handleMerchantCallbackUsingPOSTCreated ", 201)
}

func (o *HandleMerchantCallbackUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleMerchantCallbackUsingPOSTUnauthorized creates a HandleMerchantCallbackUsingPOSTUnauthorized with default headers values
func NewHandleMerchantCallbackUsingPOSTUnauthorized() *HandleMerchantCallbackUsingPOSTUnauthorized {
	return &HandleMerchantCallbackUsingPOSTUnauthorized{}
}

/*HandleMerchantCallbackUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type HandleMerchantCallbackUsingPOSTUnauthorized struct {
}

func (o *HandleMerchantCallbackUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/integration/merchant_callback][%d] handleMerchantCallbackUsingPOSTUnauthorized ", 401)
}

func (o *HandleMerchantCallbackUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleMerchantCallbackUsingPOSTForbidden creates a HandleMerchantCallbackUsingPOSTForbidden with default headers values
func NewHandleMerchantCallbackUsingPOSTForbidden() *HandleMerchantCallbackUsingPOSTForbidden {
	return &HandleMerchantCallbackUsingPOSTForbidden{}
}

/*HandleMerchantCallbackUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type HandleMerchantCallbackUsingPOSTForbidden struct {
}

func (o *HandleMerchantCallbackUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/integration/merchant_callback][%d] handleMerchantCallbackUsingPOSTForbidden ", 403)
}

func (o *HandleMerchantCallbackUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleMerchantCallbackUsingPOSTNotFound creates a HandleMerchantCallbackUsingPOSTNotFound with default headers values
func NewHandleMerchantCallbackUsingPOSTNotFound() *HandleMerchantCallbackUsingPOSTNotFound {
	return &HandleMerchantCallbackUsingPOSTNotFound{}
}

/*HandleMerchantCallbackUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type HandleMerchantCallbackUsingPOSTNotFound struct {
}

func (o *HandleMerchantCallbackUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/integration/merchant_callback][%d] handleMerchantCallbackUsingPOSTNotFound ", 404)
}

func (o *HandleMerchantCallbackUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
