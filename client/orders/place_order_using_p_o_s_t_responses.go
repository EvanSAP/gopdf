// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// PlaceOrderUsingPOSTReader is a Reader for the PlaceOrderUsingPOST structure.
type PlaceOrderUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PlaceOrderUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPlaceOrderUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPlaceOrderUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPlaceOrderUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPlaceOrderUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPlaceOrderUsingPOSTCreated creates a PlaceOrderUsingPOSTCreated with default headers values
func NewPlaceOrderUsingPOSTCreated() *PlaceOrderUsingPOSTCreated {
	return &PlaceOrderUsingPOSTCreated{}
}

/*PlaceOrderUsingPOSTCreated handles this case with default header values.

Created
*/
type PlaceOrderUsingPOSTCreated struct {
	Payload *models.OrderWsDTO
}

func (o *PlaceOrderUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/orders][%d] placeOrderUsingPOSTCreated  %+v", 201, o.Payload)
}

func (o *PlaceOrderUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrderWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPlaceOrderUsingPOSTUnauthorized creates a PlaceOrderUsingPOSTUnauthorized with default headers values
func NewPlaceOrderUsingPOSTUnauthorized() *PlaceOrderUsingPOSTUnauthorized {
	return &PlaceOrderUsingPOSTUnauthorized{}
}

/*PlaceOrderUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type PlaceOrderUsingPOSTUnauthorized struct {
}

func (o *PlaceOrderUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/orders][%d] placeOrderUsingPOSTUnauthorized ", 401)
}

func (o *PlaceOrderUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPlaceOrderUsingPOSTForbidden creates a PlaceOrderUsingPOSTForbidden with default headers values
func NewPlaceOrderUsingPOSTForbidden() *PlaceOrderUsingPOSTForbidden {
	return &PlaceOrderUsingPOSTForbidden{}
}

/*PlaceOrderUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type PlaceOrderUsingPOSTForbidden struct {
}

func (o *PlaceOrderUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/orders][%d] placeOrderUsingPOSTForbidden ", 403)
}

func (o *PlaceOrderUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPlaceOrderUsingPOSTNotFound creates a PlaceOrderUsingPOSTNotFound with default headers values
func NewPlaceOrderUsingPOSTNotFound() *PlaceOrderUsingPOSTNotFound {
	return &PlaceOrderUsingPOSTNotFound{}
}

/*PlaceOrderUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type PlaceOrderUsingPOSTNotFound struct {
}

func (o *PlaceOrderUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/orders][%d] placeOrderUsingPOSTNotFound ", 404)
}

func (o *PlaceOrderUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
