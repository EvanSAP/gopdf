// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetPageDataUsingGETReader is a Reader for the GetPageDataUsingGET structure.
type GetPageDataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPageDataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPageDataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPageDataUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetPageDataUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPageDataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPageDataUsingGETOK creates a GetPageDataUsingGETOK with default headers values
func NewGetPageDataUsingGETOK() *GetPageDataUsingGETOK {
	return &GetPageDataUsingGETOK{}
}

/*GetPageDataUsingGETOK handles this case with default header values.

OK
*/
type GetPageDataUsingGETOK struct {
	Payload *models.CMSPageWsDTO
}

func (o *GetPageDataUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cms/pages][%d] getPageDataUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetPageDataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CMSPageWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPageDataUsingGETUnauthorized creates a GetPageDataUsingGETUnauthorized with default headers values
func NewGetPageDataUsingGETUnauthorized() *GetPageDataUsingGETUnauthorized {
	return &GetPageDataUsingGETUnauthorized{}
}

/*GetPageDataUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPageDataUsingGETUnauthorized struct {
}

func (o *GetPageDataUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cms/pages][%d] getPageDataUsingGETUnauthorized ", 401)
}

func (o *GetPageDataUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPageDataUsingGETForbidden creates a GetPageDataUsingGETForbidden with default headers values
func NewGetPageDataUsingGETForbidden() *GetPageDataUsingGETForbidden {
	return &GetPageDataUsingGETForbidden{}
}

/*GetPageDataUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetPageDataUsingGETForbidden struct {
}

func (o *GetPageDataUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cms/pages][%d] getPageDataUsingGETForbidden ", 403)
}

func (o *GetPageDataUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPageDataUsingGETNotFound creates a GetPageDataUsingGETNotFound with default headers values
func NewGetPageDataUsingGETNotFound() *GetPageDataUsingGETNotFound {
	return &GetPageDataUsingGETNotFound{}
}

/*GetPageDataUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetPageDataUsingGETNotFound struct {
}

func (o *GetPageDataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cms/pages][%d] getPageDataUsingGETNotFound ", 404)
}

func (o *GetPageDataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
