// Code generated by go-swagger; DO NOT EDIT.

package countries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetRegionsForCountryUsingGETReader is a Reader for the GetRegionsForCountryUsingGET structure.
type GetRegionsForCountryUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegionsForCountryUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRegionsForCountryUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetRegionsForCountryUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRegionsForCountryUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRegionsForCountryUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRegionsForCountryUsingGETOK creates a GetRegionsForCountryUsingGETOK with default headers values
func NewGetRegionsForCountryUsingGETOK() *GetRegionsForCountryUsingGETOK {
	return &GetRegionsForCountryUsingGETOK{}
}

/*GetRegionsForCountryUsingGETOK handles this case with default header values.

OK
*/
type GetRegionsForCountryUsingGETOK struct {
	Payload *models.RegionListWsDTO
}

func (o *GetRegionsForCountryUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/countries/{countyIsoCode}/regions][%d] getRegionsForCountryUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetRegionsForCountryUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegionListWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionsForCountryUsingGETUnauthorized creates a GetRegionsForCountryUsingGETUnauthorized with default headers values
func NewGetRegionsForCountryUsingGETUnauthorized() *GetRegionsForCountryUsingGETUnauthorized {
	return &GetRegionsForCountryUsingGETUnauthorized{}
}

/*GetRegionsForCountryUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetRegionsForCountryUsingGETUnauthorized struct {
}

func (o *GetRegionsForCountryUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/countries/{countyIsoCode}/regions][%d] getRegionsForCountryUsingGETUnauthorized ", 401)
}

func (o *GetRegionsForCountryUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionsForCountryUsingGETForbidden creates a GetRegionsForCountryUsingGETForbidden with default headers values
func NewGetRegionsForCountryUsingGETForbidden() *GetRegionsForCountryUsingGETForbidden {
	return &GetRegionsForCountryUsingGETForbidden{}
}

/*GetRegionsForCountryUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetRegionsForCountryUsingGETForbidden struct {
}

func (o *GetRegionsForCountryUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/countries/{countyIsoCode}/regions][%d] getRegionsForCountryUsingGETForbidden ", 403)
}

func (o *GetRegionsForCountryUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionsForCountryUsingGETNotFound creates a GetRegionsForCountryUsingGETNotFound with default headers values
func NewGetRegionsForCountryUsingGETNotFound() *GetRegionsForCountryUsingGETNotFound {
	return &GetRegionsForCountryUsingGETNotFound{}
}

/*GetRegionsForCountryUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetRegionsForCountryUsingGETNotFound struct {
}

func (o *GetRegionsForCountryUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/countries/{countyIsoCode}/regions][%d] getRegionsForCountryUsingGETNotFound ", 404)
}

func (o *GetRegionsForCountryUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
