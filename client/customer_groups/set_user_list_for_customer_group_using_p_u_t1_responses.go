// Code generated by go-swagger; DO NOT EDIT.

package customer_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// SetUserListForCustomerGroupUsingPUT1Reader is a Reader for the SetUserListForCustomerGroupUsingPUT1 structure.
type SetUserListForCustomerGroupUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetUserListForCustomerGroupUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetUserListForCustomerGroupUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewSetUserListForCustomerGroupUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSetUserListForCustomerGroupUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSetUserListForCustomerGroupUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSetUserListForCustomerGroupUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetUserListForCustomerGroupUsingPUT1OK creates a SetUserListForCustomerGroupUsingPUT1OK with default headers values
func NewSetUserListForCustomerGroupUsingPUT1OK() *SetUserListForCustomerGroupUsingPUT1OK {
	return &SetUserListForCustomerGroupUsingPUT1OK{}
}

/*SetUserListForCustomerGroupUsingPUT1OK handles this case with default header values.

OK
*/
type SetUserListForCustomerGroupUsingPUT1OK struct {
}

func (o *SetUserListForCustomerGroupUsingPUT1OK) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/customergroups/{groupId}/members][%d] setUserListForCustomerGroupUsingPUT1OK ", 200)
}

func (o *SetUserListForCustomerGroupUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserListForCustomerGroupUsingPUT1Created creates a SetUserListForCustomerGroupUsingPUT1Created with default headers values
func NewSetUserListForCustomerGroupUsingPUT1Created() *SetUserListForCustomerGroupUsingPUT1Created {
	return &SetUserListForCustomerGroupUsingPUT1Created{}
}

/*SetUserListForCustomerGroupUsingPUT1Created handles this case with default header values.

Created
*/
type SetUserListForCustomerGroupUsingPUT1Created struct {
}

func (o *SetUserListForCustomerGroupUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/customergroups/{groupId}/members][%d] setUserListForCustomerGroupUsingPUT1Created ", 201)
}

func (o *SetUserListForCustomerGroupUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserListForCustomerGroupUsingPUT1Unauthorized creates a SetUserListForCustomerGroupUsingPUT1Unauthorized with default headers values
func NewSetUserListForCustomerGroupUsingPUT1Unauthorized() *SetUserListForCustomerGroupUsingPUT1Unauthorized {
	return &SetUserListForCustomerGroupUsingPUT1Unauthorized{}
}

/*SetUserListForCustomerGroupUsingPUT1Unauthorized handles this case with default header values.

Unauthorized
*/
type SetUserListForCustomerGroupUsingPUT1Unauthorized struct {
}

func (o *SetUserListForCustomerGroupUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/customergroups/{groupId}/members][%d] setUserListForCustomerGroupUsingPUT1Unauthorized ", 401)
}

func (o *SetUserListForCustomerGroupUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserListForCustomerGroupUsingPUT1Forbidden creates a SetUserListForCustomerGroupUsingPUT1Forbidden with default headers values
func NewSetUserListForCustomerGroupUsingPUT1Forbidden() *SetUserListForCustomerGroupUsingPUT1Forbidden {
	return &SetUserListForCustomerGroupUsingPUT1Forbidden{}
}

/*SetUserListForCustomerGroupUsingPUT1Forbidden handles this case with default header values.

Forbidden
*/
type SetUserListForCustomerGroupUsingPUT1Forbidden struct {
}

func (o *SetUserListForCustomerGroupUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/customergroups/{groupId}/members][%d] setUserListForCustomerGroupUsingPUT1Forbidden ", 403)
}

func (o *SetUserListForCustomerGroupUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserListForCustomerGroupUsingPUT1NotFound creates a SetUserListForCustomerGroupUsingPUT1NotFound with default headers values
func NewSetUserListForCustomerGroupUsingPUT1NotFound() *SetUserListForCustomerGroupUsingPUT1NotFound {
	return &SetUserListForCustomerGroupUsingPUT1NotFound{}
}

/*SetUserListForCustomerGroupUsingPUT1NotFound handles this case with default header values.

Not Found
*/
type SetUserListForCustomerGroupUsingPUT1NotFound struct {
}

func (o *SetUserListForCustomerGroupUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/customergroups/{groupId}/members][%d] setUserListForCustomerGroupUsingPUT1NotFound ", 404)
}

func (o *SetUserListForCustomerGroupUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
