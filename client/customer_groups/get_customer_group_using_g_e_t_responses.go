// Code generated by go-swagger; DO NOT EDIT.

package customer_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetCustomerGroupUsingGETReader is a Reader for the GetCustomerGroupUsingGET structure.
type GetCustomerGroupUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomerGroupUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCustomerGroupUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCustomerGroupUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCustomerGroupUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCustomerGroupUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomerGroupUsingGETOK creates a GetCustomerGroupUsingGETOK with default headers values
func NewGetCustomerGroupUsingGETOK() *GetCustomerGroupUsingGETOK {
	return &GetCustomerGroupUsingGETOK{}
}

/*GetCustomerGroupUsingGETOK handles this case with default header values.

OK
*/
type GetCustomerGroupUsingGETOK struct {
	Payload *models.UserGroupWsDTO
}

func (o *GetCustomerGroupUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/customergroups/{groupId}][%d] getCustomerGroupUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCustomerGroupUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroupWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupUsingGETUnauthorized creates a GetCustomerGroupUsingGETUnauthorized with default headers values
func NewGetCustomerGroupUsingGETUnauthorized() *GetCustomerGroupUsingGETUnauthorized {
	return &GetCustomerGroupUsingGETUnauthorized{}
}

/*GetCustomerGroupUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCustomerGroupUsingGETUnauthorized struct {
}

func (o *GetCustomerGroupUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/customergroups/{groupId}][%d] getCustomerGroupUsingGETUnauthorized ", 401)
}

func (o *GetCustomerGroupUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomerGroupUsingGETForbidden creates a GetCustomerGroupUsingGETForbidden with default headers values
func NewGetCustomerGroupUsingGETForbidden() *GetCustomerGroupUsingGETForbidden {
	return &GetCustomerGroupUsingGETForbidden{}
}

/*GetCustomerGroupUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCustomerGroupUsingGETForbidden struct {
}

func (o *GetCustomerGroupUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/customergroups/{groupId}][%d] getCustomerGroupUsingGETForbidden ", 403)
}

func (o *GetCustomerGroupUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomerGroupUsingGETNotFound creates a GetCustomerGroupUsingGETNotFound with default headers values
func NewGetCustomerGroupUsingGETNotFound() *GetCustomerGroupUsingGETNotFound {
	return &GetCustomerGroupUsingGETNotFound{}
}

/*GetCustomerGroupUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCustomerGroupUsingGETNotFound struct {
}

func (o *GetCustomerGroupUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/customergroups/{groupId}][%d] getCustomerGroupUsingGETNotFound ", 404)
}

func (o *GetCustomerGroupUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
