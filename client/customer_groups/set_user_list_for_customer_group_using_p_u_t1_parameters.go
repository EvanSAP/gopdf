// Code generated by go-swagger; DO NOT EDIT.

package customer_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
	"golang.org/x/net/context"
)

// NewSetUserListForCustomerGroupUsingPUT1Params creates a new SetUserListForCustomerGroupUsingPUT1Params object
// with the default values initialized.
func NewSetUserListForCustomerGroupUsingPUT1Params() *SetUserListForCustomerGroupUsingPUT1Params {
	var ()
	return &SetUserListForCustomerGroupUsingPUT1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetUserListForCustomerGroupUsingPUT1ParamsWithTimeout creates a new SetUserListForCustomerGroupUsingPUT1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetUserListForCustomerGroupUsingPUT1ParamsWithTimeout(timeout time.Duration) *SetUserListForCustomerGroupUsingPUT1Params {
	var ()
	return &SetUserListForCustomerGroupUsingPUT1Params{

		timeout: timeout,
	}
}

// NewSetUserListForCustomerGroupUsingPUT1ParamsWithContext creates a new SetUserListForCustomerGroupUsingPUT1Params object
// with the default values initialized, and the ability to set a context for a request
func NewSetUserListForCustomerGroupUsingPUT1ParamsWithContext(ctx context.Context) *SetUserListForCustomerGroupUsingPUT1Params {
	var ()
	return &SetUserListForCustomerGroupUsingPUT1Params{

		Context: ctx,
	}
}

// NewSetUserListForCustomerGroupUsingPUT1ParamsWithHTTPClient creates a new SetUserListForCustomerGroupUsingPUT1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetUserListForCustomerGroupUsingPUT1ParamsWithHTTPClient(client *http.Client) *SetUserListForCustomerGroupUsingPUT1Params {
	var ()
	return &SetUserListForCustomerGroupUsingPUT1Params{
		HTTPClient: client,
	}
}

/*SetUserListForCustomerGroupUsingPUT1Params contains all the parameters to send to the API endpoint
for the set user list for customer group using p u t 1 operation typically these are written to a http.Request
*/
type SetUserListForCustomerGroupUsingPUT1Params struct {

	/*BaseSiteID
	  Base site identifier

	*/
	BaseSiteID string
	/*GroupID
	  Group identifier.

	*/
	GroupID string
	/*Members
	  List of users to set for customer group.

	*/
	Members *models.MemberListWsDTO

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) WithTimeout(timeout time.Duration) *SetUserListForCustomerGroupUsingPUT1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) WithContext(ctx context.Context) *SetUserListForCustomerGroupUsingPUT1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) WithHTTPClient(client *http.Client) *SetUserListForCustomerGroupUsingPUT1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseSiteID adds the baseSiteID to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) WithBaseSiteID(baseSiteID string) *SetUserListForCustomerGroupUsingPUT1Params {
	o.SetBaseSiteID(baseSiteID)
	return o
}

// SetBaseSiteID adds the baseSiteId to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) SetBaseSiteID(baseSiteID string) {
	o.BaseSiteID = baseSiteID
}

// WithGroupID adds the groupID to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) WithGroupID(groupID string) *SetUserListForCustomerGroupUsingPUT1Params {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithMembers adds the members to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) WithMembers(members *models.MemberListWsDTO) *SetUserListForCustomerGroupUsingPUT1Params {
	o.SetMembers(members)
	return o
}

// SetMembers adds the members to the set user list for customer group using p u t 1 params
func (o *SetUserListForCustomerGroupUsingPUT1Params) SetMembers(members *models.MemberListWsDTO) {
	o.Members = members
}

// WriteToRequest writes these params to a swagger request
func (o *SetUserListForCustomerGroupUsingPUT1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param baseSiteId
	if err := r.SetPathParam("baseSiteId", o.BaseSiteID); err != nil {
		return err
	}

	// path param groupId
	if err := r.SetPathParam("groupId", o.GroupID); err != nil {
		return err
	}

	if o.Members != nil {
		if err := r.SetBodyParam(o.Members); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
