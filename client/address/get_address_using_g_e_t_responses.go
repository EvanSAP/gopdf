// Code generated by go-swagger; DO NOT EDIT.

package address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetAddressUsingGETReader is a Reader for the GetAddressUsingGET structure.
type GetAddressUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAddressUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAddressUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAddressUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAddressUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAddressUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAddressUsingGETOK creates a GetAddressUsingGETOK with default headers values
func NewGetAddressUsingGETOK() *GetAddressUsingGETOK {
	return &GetAddressUsingGETOK{}
}

/*GetAddressUsingGETOK handles this case with default header values.

OK
*/
type GetAddressUsingGETOK struct {
	Payload *models.AddressWsDTO
}

func (o *GetAddressUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] getAddressUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAddressUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddressWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddressUsingGETUnauthorized creates a GetAddressUsingGETUnauthorized with default headers values
func NewGetAddressUsingGETUnauthorized() *GetAddressUsingGETUnauthorized {
	return &GetAddressUsingGETUnauthorized{}
}

/*GetAddressUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAddressUsingGETUnauthorized struct {
}

func (o *GetAddressUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] getAddressUsingGETUnauthorized ", 401)
}

func (o *GetAddressUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddressUsingGETForbidden creates a GetAddressUsingGETForbidden with default headers values
func NewGetAddressUsingGETForbidden() *GetAddressUsingGETForbidden {
	return &GetAddressUsingGETForbidden{}
}

/*GetAddressUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAddressUsingGETForbidden struct {
}

func (o *GetAddressUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] getAddressUsingGETForbidden ", 403)
}

func (o *GetAddressUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddressUsingGETNotFound creates a GetAddressUsingGETNotFound with default headers values
func NewGetAddressUsingGETNotFound() *GetAddressUsingGETNotFound {
	return &GetAddressUsingGETNotFound{}
}

/*GetAddressUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAddressUsingGETNotFound struct {
}

func (o *GetAddressUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] getAddressUsingGETNotFound ", 404)
}

func (o *GetAddressUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
