// Code generated by go-swagger; DO NOT EDIT.

package address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PutAddressUsingPUT1Reader is a Reader for the PutAddressUsingPUT1 structure.
type PutAddressUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAddressUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAddressUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPutAddressUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutAddressUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutAddressUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAddressUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAddressUsingPUT1OK creates a PutAddressUsingPUT1OK with default headers values
func NewPutAddressUsingPUT1OK() *PutAddressUsingPUT1OK {
	return &PutAddressUsingPUT1OK{}
}

/*PutAddressUsingPUT1OK handles this case with default header values.

OK
*/
type PutAddressUsingPUT1OK struct {
}

func (o *PutAddressUsingPUT1OK) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] putAddressUsingPUT1OK ", 200)
}

func (o *PutAddressUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAddressUsingPUT1Created creates a PutAddressUsingPUT1Created with default headers values
func NewPutAddressUsingPUT1Created() *PutAddressUsingPUT1Created {
	return &PutAddressUsingPUT1Created{}
}

/*PutAddressUsingPUT1Created handles this case with default header values.

Created
*/
type PutAddressUsingPUT1Created struct {
}

func (o *PutAddressUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] putAddressUsingPUT1Created ", 201)
}

func (o *PutAddressUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAddressUsingPUT1Unauthorized creates a PutAddressUsingPUT1Unauthorized with default headers values
func NewPutAddressUsingPUT1Unauthorized() *PutAddressUsingPUT1Unauthorized {
	return &PutAddressUsingPUT1Unauthorized{}
}

/*PutAddressUsingPUT1Unauthorized handles this case with default header values.

Unauthorized
*/
type PutAddressUsingPUT1Unauthorized struct {
}

func (o *PutAddressUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] putAddressUsingPUT1Unauthorized ", 401)
}

func (o *PutAddressUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAddressUsingPUT1Forbidden creates a PutAddressUsingPUT1Forbidden with default headers values
func NewPutAddressUsingPUT1Forbidden() *PutAddressUsingPUT1Forbidden {
	return &PutAddressUsingPUT1Forbidden{}
}

/*PutAddressUsingPUT1Forbidden handles this case with default header values.

Forbidden
*/
type PutAddressUsingPUT1Forbidden struct {
}

func (o *PutAddressUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] putAddressUsingPUT1Forbidden ", 403)
}

func (o *PutAddressUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAddressUsingPUT1NotFound creates a PutAddressUsingPUT1NotFound with default headers values
func NewPutAddressUsingPUT1NotFound() *PutAddressUsingPUT1NotFound {
	return &PutAddressUsingPUT1NotFound{}
}

/*PutAddressUsingPUT1NotFound handles this case with default header values.

Not Found
*/
type PutAddressUsingPUT1NotFound struct {
}

func (o *PutAddressUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/addresses/{addressId}][%d] putAddressUsingPUT1NotFound ", 404)
}

func (o *PutAddressUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
