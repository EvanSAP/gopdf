// Code generated by go-swagger; DO NOT EDIT.

package address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	"golang.org/x/net/context"
)

// NewDeleteAddressUsingDELETEParams creates a new DeleteAddressUsingDELETEParams object
// with the default values initialized.
func NewDeleteAddressUsingDELETEParams() *DeleteAddressUsingDELETEParams {
	var ()
	return &DeleteAddressUsingDELETEParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAddressUsingDELETEParamsWithTimeout creates a new DeleteAddressUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAddressUsingDELETEParamsWithTimeout(timeout time.Duration) *DeleteAddressUsingDELETEParams {
	var ()
	return &DeleteAddressUsingDELETEParams{

		timeout: timeout,
	}
}

// NewDeleteAddressUsingDELETEParamsWithContext creates a new DeleteAddressUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAddressUsingDELETEParamsWithContext(ctx context.Context) *DeleteAddressUsingDELETEParams {
	var ()
	return &DeleteAddressUsingDELETEParams{

		Context: ctx,
	}
}

// NewDeleteAddressUsingDELETEParamsWithHTTPClient creates a new DeleteAddressUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAddressUsingDELETEParamsWithHTTPClient(client *http.Client) *DeleteAddressUsingDELETEParams {
	var ()
	return &DeleteAddressUsingDELETEParams{
		HTTPClient: client,
	}
}

/*DeleteAddressUsingDELETEParams contains all the parameters to send to the API endpoint
for the delete address using d e l e t e operation typically these are written to a http.Request
*/
type DeleteAddressUsingDELETEParams struct {

	/*AddressID
	  Address identifier.

	*/
	AddressID string
	/*BaseSiteID
	  Base site identifier

	*/
	BaseSiteID string
	/*UserID
	  User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) WithTimeout(timeout time.Duration) *DeleteAddressUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) WithContext(ctx context.Context) *DeleteAddressUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) WithHTTPClient(client *http.Client) *DeleteAddressUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddressID adds the addressID to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) WithAddressID(addressID string) *DeleteAddressUsingDELETEParams {
	o.SetAddressID(addressID)
	return o
}

// SetAddressID adds the addressId to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) SetAddressID(addressID string) {
	o.AddressID = addressID
}

// WithBaseSiteID adds the baseSiteID to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) WithBaseSiteID(baseSiteID string) *DeleteAddressUsingDELETEParams {
	o.SetBaseSiteID(baseSiteID)
	return o
}

// SetBaseSiteID adds the baseSiteId to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) SetBaseSiteID(baseSiteID string) {
	o.BaseSiteID = baseSiteID
}

// WithUserID adds the userID to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) WithUserID(userID string) *DeleteAddressUsingDELETEParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the delete address using d e l e t e params
func (o *DeleteAddressUsingDELETEParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAddressUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param addressId
	if err := r.SetPathParam("addressId", o.AddressID); err != nil {
		return err
	}

	// path param baseSiteId
	if err := r.SetPathParam("baseSiteId", o.BaseSiteID); err != nil {
		return err
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
