// Code generated by go-swagger; DO NOT EDIT.

package address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetAddressesUsingGETReader is a Reader for the GetAddressesUsingGET structure.
type GetAddressesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAddressesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAddressesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAddressesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAddressesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAddressesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAddressesUsingGETOK creates a GetAddressesUsingGETOK with default headers values
func NewGetAddressesUsingGETOK() *GetAddressesUsingGETOK {
	return &GetAddressesUsingGETOK{}
}

/*GetAddressesUsingGETOK handles this case with default header values.

OK
*/
type GetAddressesUsingGETOK struct {
	Payload *models.AddressListWsDTO
}

func (o *GetAddressesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses][%d] getAddressesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAddressesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddressListWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddressesUsingGETUnauthorized creates a GetAddressesUsingGETUnauthorized with default headers values
func NewGetAddressesUsingGETUnauthorized() *GetAddressesUsingGETUnauthorized {
	return &GetAddressesUsingGETUnauthorized{}
}

/*GetAddressesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAddressesUsingGETUnauthorized struct {
}

func (o *GetAddressesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses][%d] getAddressesUsingGETUnauthorized ", 401)
}

func (o *GetAddressesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddressesUsingGETForbidden creates a GetAddressesUsingGETForbidden with default headers values
func NewGetAddressesUsingGETForbidden() *GetAddressesUsingGETForbidden {
	return &GetAddressesUsingGETForbidden{}
}

/*GetAddressesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAddressesUsingGETForbidden struct {
}

func (o *GetAddressesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses][%d] getAddressesUsingGETForbidden ", 403)
}

func (o *GetAddressesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddressesUsingGETNotFound creates a GetAddressesUsingGETNotFound with default headers values
func NewGetAddressesUsingGETNotFound() *GetAddressesUsingGETNotFound {
	return &GetAddressesUsingGETNotFound{}
}

/*GetAddressesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAddressesUsingGETNotFound struct {
}

func (o *GetAddressesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/addresses][%d] getAddressesUsingGETNotFound ", 404)
}

func (o *GetAddressesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
