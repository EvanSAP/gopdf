// Code generated by go-swagger; DO NOT EDIT.

package stores

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// LocationDetailsUsingGETReader is a Reader for the LocationDetailsUsingGET structure.
type LocationDetailsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LocationDetailsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLocationDetailsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewLocationDetailsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewLocationDetailsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewLocationDetailsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLocationDetailsUsingGETOK creates a LocationDetailsUsingGETOK with default headers values
func NewLocationDetailsUsingGETOK() *LocationDetailsUsingGETOK {
	return &LocationDetailsUsingGETOK{}
}

/*LocationDetailsUsingGETOK handles this case with default header values.

OK
*/
type LocationDetailsUsingGETOK struct {
	Payload *models.PointOfServiceWsDTO
}

func (o *LocationDetailsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/stores/{storeId}][%d] locationDetailsUsingGETOK  %+v", 200, o.Payload)
}

func (o *LocationDetailsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PointOfServiceWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocationDetailsUsingGETUnauthorized creates a LocationDetailsUsingGETUnauthorized with default headers values
func NewLocationDetailsUsingGETUnauthorized() *LocationDetailsUsingGETUnauthorized {
	return &LocationDetailsUsingGETUnauthorized{}
}

/*LocationDetailsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type LocationDetailsUsingGETUnauthorized struct {
}

func (o *LocationDetailsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/stores/{storeId}][%d] locationDetailsUsingGETUnauthorized ", 401)
}

func (o *LocationDetailsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLocationDetailsUsingGETForbidden creates a LocationDetailsUsingGETForbidden with default headers values
func NewLocationDetailsUsingGETForbidden() *LocationDetailsUsingGETForbidden {
	return &LocationDetailsUsingGETForbidden{}
}

/*LocationDetailsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type LocationDetailsUsingGETForbidden struct {
}

func (o *LocationDetailsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/stores/{storeId}][%d] locationDetailsUsingGETForbidden ", 403)
}

func (o *LocationDetailsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLocationDetailsUsingGETNotFound creates a LocationDetailsUsingGETNotFound with default headers values
func NewLocationDetailsUsingGETNotFound() *LocationDetailsUsingGETNotFound {
	return &LocationDetailsUsingGETNotFound{}
}

/*LocationDetailsUsingGETNotFound handles this case with default header values.

Not Found
*/
type LocationDetailsUsingGETNotFound struct {
}

func (o *LocationDetailsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/stores/{storeId}][%d] locationDetailsUsingGETNotFound ", 404)
}

func (o *LocationDetailsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
