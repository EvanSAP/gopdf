// Code generated by go-swagger; DO NOT EDIT.

package vouchers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetVoucherByCodeUsingGETReader is a Reader for the GetVoucherByCodeUsingGET structure.
type GetVoucherByCodeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVoucherByCodeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVoucherByCodeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetVoucherByCodeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetVoucherByCodeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetVoucherByCodeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVoucherByCodeUsingGETOK creates a GetVoucherByCodeUsingGETOK with default headers values
func NewGetVoucherByCodeUsingGETOK() *GetVoucherByCodeUsingGETOK {
	return &GetVoucherByCodeUsingGETOK{}
}

/*GetVoucherByCodeUsingGETOK handles this case with default header values.

OK
*/
type GetVoucherByCodeUsingGETOK struct {
	Payload *models.VoucherWsDTO
}

func (o *GetVoucherByCodeUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/vouchers/{code}][%d] getVoucherByCodeUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetVoucherByCodeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VoucherWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVoucherByCodeUsingGETUnauthorized creates a GetVoucherByCodeUsingGETUnauthorized with default headers values
func NewGetVoucherByCodeUsingGETUnauthorized() *GetVoucherByCodeUsingGETUnauthorized {
	return &GetVoucherByCodeUsingGETUnauthorized{}
}

/*GetVoucherByCodeUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetVoucherByCodeUsingGETUnauthorized struct {
}

func (o *GetVoucherByCodeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/vouchers/{code}][%d] getVoucherByCodeUsingGETUnauthorized ", 401)
}

func (o *GetVoucherByCodeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVoucherByCodeUsingGETForbidden creates a GetVoucherByCodeUsingGETForbidden with default headers values
func NewGetVoucherByCodeUsingGETForbidden() *GetVoucherByCodeUsingGETForbidden {
	return &GetVoucherByCodeUsingGETForbidden{}
}

/*GetVoucherByCodeUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetVoucherByCodeUsingGETForbidden struct {
}

func (o *GetVoucherByCodeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/vouchers/{code}][%d] getVoucherByCodeUsingGETForbidden ", 403)
}

func (o *GetVoucherByCodeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVoucherByCodeUsingGETNotFound creates a GetVoucherByCodeUsingGETNotFound with default headers values
func NewGetVoucherByCodeUsingGETNotFound() *GetVoucherByCodeUsingGETNotFound {
	return &GetVoucherByCodeUsingGETNotFound{}
}

/*GetVoucherByCodeUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetVoucherByCodeUsingGETNotFound struct {
}

func (o *GetVoucherByCodeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/vouchers/{code}][%d] getVoucherByCodeUsingGETNotFound ", 404)
}

func (o *GetVoucherByCodeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
