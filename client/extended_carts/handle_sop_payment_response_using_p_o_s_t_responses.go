// Code generated by go-swagger; DO NOT EDIT.

package extended_carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// HandleSopPaymentResponseUsingPOSTReader is a Reader for the HandleSopPaymentResponseUsingPOST structure.
type HandleSopPaymentResponseUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HandleSopPaymentResponseUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewHandleSopPaymentResponseUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewHandleSopPaymentResponseUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewHandleSopPaymentResponseUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewHandleSopPaymentResponseUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewHandleSopPaymentResponseUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHandleSopPaymentResponseUsingPOSTOK creates a HandleSopPaymentResponseUsingPOSTOK with default headers values
func NewHandleSopPaymentResponseUsingPOSTOK() *HandleSopPaymentResponseUsingPOSTOK {
	return &HandleSopPaymentResponseUsingPOSTOK{}
}

/*HandleSopPaymentResponseUsingPOSTOK handles this case with default header values.

OK
*/
type HandleSopPaymentResponseUsingPOSTOK struct {
	Payload *models.PaymentDetailsWsDTO
}

func (o *HandleSopPaymentResponseUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response][%d] handleSopPaymentResponseUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *HandleSopPaymentResponseUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaymentDetailsWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHandleSopPaymentResponseUsingPOSTCreated creates a HandleSopPaymentResponseUsingPOSTCreated with default headers values
func NewHandleSopPaymentResponseUsingPOSTCreated() *HandleSopPaymentResponseUsingPOSTCreated {
	return &HandleSopPaymentResponseUsingPOSTCreated{}
}

/*HandleSopPaymentResponseUsingPOSTCreated handles this case with default header values.

Created
*/
type HandleSopPaymentResponseUsingPOSTCreated struct {
}

func (o *HandleSopPaymentResponseUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response][%d] handleSopPaymentResponseUsingPOSTCreated ", 201)
}

func (o *HandleSopPaymentResponseUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleSopPaymentResponseUsingPOSTUnauthorized creates a HandleSopPaymentResponseUsingPOSTUnauthorized with default headers values
func NewHandleSopPaymentResponseUsingPOSTUnauthorized() *HandleSopPaymentResponseUsingPOSTUnauthorized {
	return &HandleSopPaymentResponseUsingPOSTUnauthorized{}
}

/*HandleSopPaymentResponseUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type HandleSopPaymentResponseUsingPOSTUnauthorized struct {
}

func (o *HandleSopPaymentResponseUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response][%d] handleSopPaymentResponseUsingPOSTUnauthorized ", 401)
}

func (o *HandleSopPaymentResponseUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleSopPaymentResponseUsingPOSTForbidden creates a HandleSopPaymentResponseUsingPOSTForbidden with default headers values
func NewHandleSopPaymentResponseUsingPOSTForbidden() *HandleSopPaymentResponseUsingPOSTForbidden {
	return &HandleSopPaymentResponseUsingPOSTForbidden{}
}

/*HandleSopPaymentResponseUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type HandleSopPaymentResponseUsingPOSTForbidden struct {
}

func (o *HandleSopPaymentResponseUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response][%d] handleSopPaymentResponseUsingPOSTForbidden ", 403)
}

func (o *HandleSopPaymentResponseUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHandleSopPaymentResponseUsingPOSTNotFound creates a HandleSopPaymentResponseUsingPOSTNotFound with default headers values
func NewHandleSopPaymentResponseUsingPOSTNotFound() *HandleSopPaymentResponseUsingPOSTNotFound {
	return &HandleSopPaymentResponseUsingPOSTNotFound{}
}

/*HandleSopPaymentResponseUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type HandleSopPaymentResponseUsingPOSTNotFound struct {
}

func (o *HandleSopPaymentResponseUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response][%d] handleSopPaymentResponseUsingPOSTNotFound ", 404)
}

func (o *HandleSopPaymentResponseUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
