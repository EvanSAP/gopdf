// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetConsentTemplatesUsingGETReader is a Reader for the GetConsentTemplatesUsingGET structure.
type GetConsentTemplatesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConsentTemplatesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetConsentTemplatesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetConsentTemplatesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetConsentTemplatesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetConsentTemplatesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConsentTemplatesUsingGETOK creates a GetConsentTemplatesUsingGETOK with default headers values
func NewGetConsentTemplatesUsingGETOK() *GetConsentTemplatesUsingGETOK {
	return &GetConsentTemplatesUsingGETOK{}
}

/*GetConsentTemplatesUsingGETOK handles this case with default header values.

OK
*/
type GetConsentTemplatesUsingGETOK struct {
	Payload *models.ConsentTemplateListWsDTO
}

func (o *GetConsentTemplatesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates][%d] getConsentTemplatesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetConsentTemplatesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentTemplateListWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConsentTemplatesUsingGETUnauthorized creates a GetConsentTemplatesUsingGETUnauthorized with default headers values
func NewGetConsentTemplatesUsingGETUnauthorized() *GetConsentTemplatesUsingGETUnauthorized {
	return &GetConsentTemplatesUsingGETUnauthorized{}
}

/*GetConsentTemplatesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetConsentTemplatesUsingGETUnauthorized struct {
}

func (o *GetConsentTemplatesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates][%d] getConsentTemplatesUsingGETUnauthorized ", 401)
}

func (o *GetConsentTemplatesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConsentTemplatesUsingGETForbidden creates a GetConsentTemplatesUsingGETForbidden with default headers values
func NewGetConsentTemplatesUsingGETForbidden() *GetConsentTemplatesUsingGETForbidden {
	return &GetConsentTemplatesUsingGETForbidden{}
}

/*GetConsentTemplatesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetConsentTemplatesUsingGETForbidden struct {
}

func (o *GetConsentTemplatesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates][%d] getConsentTemplatesUsingGETForbidden ", 403)
}

func (o *GetConsentTemplatesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConsentTemplatesUsingGETNotFound creates a GetConsentTemplatesUsingGETNotFound with default headers values
func NewGetConsentTemplatesUsingGETNotFound() *GetConsentTemplatesUsingGETNotFound {
	return &GetConsentTemplatesUsingGETNotFound{}
}

/*GetConsentTemplatesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetConsentTemplatesUsingGETNotFound struct {
}

func (o *GetConsentTemplatesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates][%d] getConsentTemplatesUsingGETNotFound ", 404)
}

func (o *GetConsentTemplatesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
