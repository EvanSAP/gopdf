// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetConsentTemplateUsingGETReader is a Reader for the GetConsentTemplateUsingGET structure.
type GetConsentTemplateUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConsentTemplateUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetConsentTemplateUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetConsentTemplateUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetConsentTemplateUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetConsentTemplateUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConsentTemplateUsingGETOK creates a GetConsentTemplateUsingGETOK with default headers values
func NewGetConsentTemplateUsingGETOK() *GetConsentTemplateUsingGETOK {
	return &GetConsentTemplateUsingGETOK{}
}

/*GetConsentTemplateUsingGETOK handles this case with default header values.

OK
*/
type GetConsentTemplateUsingGETOK struct {
	Payload *models.ConsentTemplateWsDTO
}

func (o *GetConsentTemplateUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}][%d] getConsentTemplateUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetConsentTemplateUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentTemplateWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConsentTemplateUsingGETUnauthorized creates a GetConsentTemplateUsingGETUnauthorized with default headers values
func NewGetConsentTemplateUsingGETUnauthorized() *GetConsentTemplateUsingGETUnauthorized {
	return &GetConsentTemplateUsingGETUnauthorized{}
}

/*GetConsentTemplateUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetConsentTemplateUsingGETUnauthorized struct {
}

func (o *GetConsentTemplateUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}][%d] getConsentTemplateUsingGETUnauthorized ", 401)
}

func (o *GetConsentTemplateUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConsentTemplateUsingGETForbidden creates a GetConsentTemplateUsingGETForbidden with default headers values
func NewGetConsentTemplateUsingGETForbidden() *GetConsentTemplateUsingGETForbidden {
	return &GetConsentTemplateUsingGETForbidden{}
}

/*GetConsentTemplateUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetConsentTemplateUsingGETForbidden struct {
}

func (o *GetConsentTemplateUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}][%d] getConsentTemplateUsingGETForbidden ", 403)
}

func (o *GetConsentTemplateUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConsentTemplateUsingGETNotFound creates a GetConsentTemplateUsingGETNotFound with default headers values
func NewGetConsentTemplateUsingGETNotFound() *GetConsentTemplateUsingGETNotFound {
	return &GetConsentTemplateUsingGETNotFound{}
}

/*GetConsentTemplateUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetConsentTemplateUsingGETNotFound struct {
}

func (o *GetConsentTemplateUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}][%d] getConsentTemplateUsingGETNotFound ", 404)
}

func (o *GetConsentTemplateUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
