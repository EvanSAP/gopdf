// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GiveConsentUsingPOSTReader is a Reader for the GiveConsentUsingPOST structure.
type GiveConsentUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GiveConsentUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGiveConsentUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewGiveConsentUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGiveConsentUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGiveConsentUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGiveConsentUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGiveConsentUsingPOSTOK creates a GiveConsentUsingPOSTOK with default headers values
func NewGiveConsentUsingPOSTOK() *GiveConsentUsingPOSTOK {
	return &GiveConsentUsingPOSTOK{}
}

/*GiveConsentUsingPOSTOK handles this case with default header values.

OK
*/
type GiveConsentUsingPOSTOK struct {
	Payload *models.ConsentTemplateWsDTO
}

func (o *GiveConsentUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/consents][%d] giveConsentUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *GiveConsentUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentTemplateWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGiveConsentUsingPOSTCreated creates a GiveConsentUsingPOSTCreated with default headers values
func NewGiveConsentUsingPOSTCreated() *GiveConsentUsingPOSTCreated {
	return &GiveConsentUsingPOSTCreated{}
}

/*GiveConsentUsingPOSTCreated handles this case with default header values.

Created
*/
type GiveConsentUsingPOSTCreated struct {
}

func (o *GiveConsentUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/consents][%d] giveConsentUsingPOSTCreated ", 201)
}

func (o *GiveConsentUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGiveConsentUsingPOSTUnauthorized creates a GiveConsentUsingPOSTUnauthorized with default headers values
func NewGiveConsentUsingPOSTUnauthorized() *GiveConsentUsingPOSTUnauthorized {
	return &GiveConsentUsingPOSTUnauthorized{}
}

/*GiveConsentUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type GiveConsentUsingPOSTUnauthorized struct {
}

func (o *GiveConsentUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/consents][%d] giveConsentUsingPOSTUnauthorized ", 401)
}

func (o *GiveConsentUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGiveConsentUsingPOSTForbidden creates a GiveConsentUsingPOSTForbidden with default headers values
func NewGiveConsentUsingPOSTForbidden() *GiveConsentUsingPOSTForbidden {
	return &GiveConsentUsingPOSTForbidden{}
}

/*GiveConsentUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type GiveConsentUsingPOSTForbidden struct {
}

func (o *GiveConsentUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/consents][%d] giveConsentUsingPOSTForbidden ", 403)
}

func (o *GiveConsentUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGiveConsentUsingPOSTNotFound creates a GiveConsentUsingPOSTNotFound with default headers values
func NewGiveConsentUsingPOSTNotFound() *GiveConsentUsingPOSTNotFound {
	return &GiveConsentUsingPOSTNotFound{}
}

/*GiveConsentUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type GiveConsentUsingPOSTNotFound struct {
}

func (o *GiveConsentUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /{baseSiteId}/users/{userId}/consents][%d] giveConsentUsingPOSTNotFound ", 404)
}

func (o *GiveConsentUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
