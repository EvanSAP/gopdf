// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	"golang.org/x/net/context"
)

// NewApplyPromotionUsingPOSTParams creates a new ApplyPromotionUsingPOSTParams object
// with the default values initialized.
func NewApplyPromotionUsingPOSTParams() *ApplyPromotionUsingPOSTParams {
	var ()
	return &ApplyPromotionUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewApplyPromotionUsingPOSTParamsWithTimeout creates a new ApplyPromotionUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewApplyPromotionUsingPOSTParamsWithTimeout(timeout time.Duration) *ApplyPromotionUsingPOSTParams {
	var ()
	return &ApplyPromotionUsingPOSTParams{

		timeout: timeout,
	}
}

// NewApplyPromotionUsingPOSTParamsWithContext creates a new ApplyPromotionUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewApplyPromotionUsingPOSTParamsWithContext(ctx context.Context) *ApplyPromotionUsingPOSTParams {
	var ()
	return &ApplyPromotionUsingPOSTParams{

		Context: ctx,
	}
}

// NewApplyPromotionUsingPOSTParamsWithHTTPClient creates a new ApplyPromotionUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewApplyPromotionUsingPOSTParamsWithHTTPClient(client *http.Client) *ApplyPromotionUsingPOSTParams {
	var ()
	return &ApplyPromotionUsingPOSTParams{
		HTTPClient: client,
	}
}

/*ApplyPromotionUsingPOSTParams contains all the parameters to send to the API endpoint
for the apply promotion using p o s t operation typically these are written to a http.Request
*/
type ApplyPromotionUsingPOSTParams struct {

	/*BaseSiteID
	  Base site identifier

	*/
	BaseSiteID string
	/*CartID
	  Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart

	*/
	CartID string
	/*PromotionID
	  Promotion identifier (code)

	*/
	PromotionID string
	/*UserID
	  User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithTimeout(timeout time.Duration) *ApplyPromotionUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithContext(ctx context.Context) *ApplyPromotionUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithHTTPClient(client *http.Client) *ApplyPromotionUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseSiteID adds the baseSiteID to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithBaseSiteID(baseSiteID string) *ApplyPromotionUsingPOSTParams {
	o.SetBaseSiteID(baseSiteID)
	return o
}

// SetBaseSiteID adds the baseSiteId to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetBaseSiteID(baseSiteID string) {
	o.BaseSiteID = baseSiteID
}

// WithCartID adds the cartID to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithCartID(cartID string) *ApplyPromotionUsingPOSTParams {
	o.SetCartID(cartID)
	return o
}

// SetCartID adds the cartId to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetCartID(cartID string) {
	o.CartID = cartID
}

// WithPromotionID adds the promotionID to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithPromotionID(promotionID string) *ApplyPromotionUsingPOSTParams {
	o.SetPromotionID(promotionID)
	return o
}

// SetPromotionID adds the promotionId to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetPromotionID(promotionID string) {
	o.PromotionID = promotionID
}

// WithUserID adds the userID to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) WithUserID(userID string) *ApplyPromotionUsingPOSTParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the apply promotion using p o s t params
func (o *ApplyPromotionUsingPOSTParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *ApplyPromotionUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param baseSiteId
	if err := r.SetPathParam("baseSiteId", o.BaseSiteID); err != nil {
		return err
	}

	// path param cartId
	if err := r.SetPathParam("cartId", o.CartID); err != nil {
		return err
	}

	// query param promotionId
	qrPromotionID := o.PromotionID
	qPromotionID := qrPromotionID
	if qPromotionID != "" {
		if err := r.SetQueryParam("promotionId", qPromotionID); err != nil {
			return err
		}
	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
