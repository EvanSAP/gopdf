// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetCartEntryUsingGETReader is a Reader for the GetCartEntryUsingGET structure.
type GetCartEntryUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCartEntryUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCartEntryUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCartEntryUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCartEntryUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCartEntryUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCartEntryUsingGETOK creates a GetCartEntryUsingGETOK with default headers values
func NewGetCartEntryUsingGETOK() *GetCartEntryUsingGETOK {
	return &GetCartEntryUsingGETOK{}
}

/*GetCartEntryUsingGETOK handles this case with default header values.

OK
*/
type GetCartEntryUsingGETOK struct {
	Payload *models.OrderEntryWsDTO
}

func (o *GetCartEntryUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}][%d] getCartEntryUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCartEntryUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrderEntryWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCartEntryUsingGETUnauthorized creates a GetCartEntryUsingGETUnauthorized with default headers values
func NewGetCartEntryUsingGETUnauthorized() *GetCartEntryUsingGETUnauthorized {
	return &GetCartEntryUsingGETUnauthorized{}
}

/*GetCartEntryUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCartEntryUsingGETUnauthorized struct {
}

func (o *GetCartEntryUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}][%d] getCartEntryUsingGETUnauthorized ", 401)
}

func (o *GetCartEntryUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCartEntryUsingGETForbidden creates a GetCartEntryUsingGETForbidden with default headers values
func NewGetCartEntryUsingGETForbidden() *GetCartEntryUsingGETForbidden {
	return &GetCartEntryUsingGETForbidden{}
}

/*GetCartEntryUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCartEntryUsingGETForbidden struct {
}

func (o *GetCartEntryUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}][%d] getCartEntryUsingGETForbidden ", 403)
}

func (o *GetCartEntryUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCartEntryUsingGETNotFound creates a GetCartEntryUsingGETNotFound with default headers values
func NewGetCartEntryUsingGETNotFound() *GetCartEntryUsingGETNotFound {
	return &GetCartEntryUsingGETNotFound{}
}

/*GetCartEntryUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCartEntryUsingGETNotFound struct {
}

func (o *GetCartEntryUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}][%d] getCartEntryUsingGETNotFound ", 404)
}

func (o *GetCartEntryUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
