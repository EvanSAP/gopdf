// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
	"golang.org/x/net/context"
)

// NewAddCartEntryUsingPOST1Params creates a new AddCartEntryUsingPOST1Params object
// with the default values initialized.
func NewAddCartEntryUsingPOST1Params() *AddCartEntryUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &AddCartEntryUsingPOST1Params{
		Fields: &fieldsDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewAddCartEntryUsingPOST1ParamsWithTimeout creates a new AddCartEntryUsingPOST1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddCartEntryUsingPOST1ParamsWithTimeout(timeout time.Duration) *AddCartEntryUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &AddCartEntryUsingPOST1Params{
		Fields: &fieldsDefault,

		timeout: timeout,
	}
}

// NewAddCartEntryUsingPOST1ParamsWithContext creates a new AddCartEntryUsingPOST1Params object
// with the default values initialized, and the ability to set a context for a request
func NewAddCartEntryUsingPOST1ParamsWithContext(ctx context.Context) *AddCartEntryUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &AddCartEntryUsingPOST1Params{
		Fields: &fieldsDefault,

		Context: ctx,
	}
}

// NewAddCartEntryUsingPOST1ParamsWithHTTPClient creates a new AddCartEntryUsingPOST1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddCartEntryUsingPOST1ParamsWithHTTPClient(client *http.Client) *AddCartEntryUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &AddCartEntryUsingPOST1Params{
		Fields:     &fieldsDefault,
		HTTPClient: client,
	}
}

/*AddCartEntryUsingPOST1Params contains all the parameters to send to the API endpoint
for the add cart entry using p o s t 1 operation typically these are written to a http.Request
*/
type AddCartEntryUsingPOST1Params struct {

	/*BaseSiteID
	  Base site identifier

	*/
	BaseSiteID string
	/*CartID
	  Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart

	*/
	CartID string
	/*Entry
	  Request body parameter that contains details such as the product code (product.code), the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name).

	The DTO is in XML or .json format.

	*/
	Entry *models.OrderEntryWsDTO
	/*Fields
	  Response configuration. This is the list of fields that should be returned in the response body.

	*/
	Fields *string
	/*UserID
	  User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithTimeout(timeout time.Duration) *AddCartEntryUsingPOST1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithContext(ctx context.Context) *AddCartEntryUsingPOST1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithHTTPClient(client *http.Client) *AddCartEntryUsingPOST1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseSiteID adds the baseSiteID to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithBaseSiteID(baseSiteID string) *AddCartEntryUsingPOST1Params {
	o.SetBaseSiteID(baseSiteID)
	return o
}

// SetBaseSiteID adds the baseSiteId to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetBaseSiteID(baseSiteID string) {
	o.BaseSiteID = baseSiteID
}

// WithCartID adds the cartID to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithCartID(cartID string) *AddCartEntryUsingPOST1Params {
	o.SetCartID(cartID)
	return o
}

// SetCartID adds the cartId to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetCartID(cartID string) {
	o.CartID = cartID
}

// WithEntry adds the entry to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithEntry(entry *models.OrderEntryWsDTO) *AddCartEntryUsingPOST1Params {
	o.SetEntry(entry)
	return o
}

// SetEntry adds the entry to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetEntry(entry *models.OrderEntryWsDTO) {
	o.Entry = entry
}

// WithFields adds the fields to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithFields(fields *string) *AddCartEntryUsingPOST1Params {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetFields(fields *string) {
	o.Fields = fields
}

// WithUserID adds the userID to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) WithUserID(userID string) *AddCartEntryUsingPOST1Params {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the add cart entry using p o s t 1 params
func (o *AddCartEntryUsingPOST1Params) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *AddCartEntryUsingPOST1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param baseSiteId
	if err := r.SetPathParam("baseSiteId", o.BaseSiteID); err != nil {
		return err
	}

	// path param cartId
	if err := r.SetPathParam("cartId", o.CartID); err != nil {
		return err
	}

	if o.Entry != nil {
		if err := r.SetBodyParam(o.Entry); err != nil {
			return err
		}
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
