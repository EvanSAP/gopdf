// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetCartUsingGETReader is a Reader for the GetCartUsingGET structure.
type GetCartUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCartUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCartUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCartUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCartUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCartUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCartUsingGETOK creates a GetCartUsingGETOK with default headers values
func NewGetCartUsingGETOK() *GetCartUsingGETOK {
	return &GetCartUsingGETOK{}
}

/*GetCartUsingGETOK handles this case with default header values.

OK
*/
type GetCartUsingGETOK struct {
	Payload *models.CartWsDTO
}

func (o *GetCartUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}][%d] getCartUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCartUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CartWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCartUsingGETUnauthorized creates a GetCartUsingGETUnauthorized with default headers values
func NewGetCartUsingGETUnauthorized() *GetCartUsingGETUnauthorized {
	return &GetCartUsingGETUnauthorized{}
}

/*GetCartUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCartUsingGETUnauthorized struct {
}

func (o *GetCartUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}][%d] getCartUsingGETUnauthorized ", 401)
}

func (o *GetCartUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCartUsingGETForbidden creates a GetCartUsingGETForbidden with default headers values
func NewGetCartUsingGETForbidden() *GetCartUsingGETForbidden {
	return &GetCartUsingGETForbidden{}
}

/*GetCartUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCartUsingGETForbidden struct {
}

func (o *GetCartUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}][%d] getCartUsingGETForbidden ", 403)
}

func (o *GetCartUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCartUsingGETNotFound creates a GetCartUsingGETNotFound with default headers values
func NewGetCartUsingGETNotFound() *GetCartUsingGETNotFound {
	return &GetCartUsingGETNotFound{}
}

/*GetCartUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCartUsingGETNotFound struct {
}

func (o *GetCartUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}][%d] getCartUsingGETNotFound ", 404)
}

func (o *GetCartUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
