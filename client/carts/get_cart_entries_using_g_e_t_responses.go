// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetCartEntriesUsingGETReader is a Reader for the GetCartEntriesUsingGET structure.
type GetCartEntriesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCartEntriesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCartEntriesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCartEntriesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCartEntriesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCartEntriesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCartEntriesUsingGETOK creates a GetCartEntriesUsingGETOK with default headers values
func NewGetCartEntriesUsingGETOK() *GetCartEntriesUsingGETOK {
	return &GetCartEntriesUsingGETOK{}
}

/*GetCartEntriesUsingGETOK handles this case with default header values.

OK
*/
type GetCartEntriesUsingGETOK struct {
	Payload *models.OrderEntryListWsDTO
}

func (o *GetCartEntriesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries][%d] getCartEntriesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCartEntriesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrderEntryListWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCartEntriesUsingGETUnauthorized creates a GetCartEntriesUsingGETUnauthorized with default headers values
func NewGetCartEntriesUsingGETUnauthorized() *GetCartEntriesUsingGETUnauthorized {
	return &GetCartEntriesUsingGETUnauthorized{}
}

/*GetCartEntriesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCartEntriesUsingGETUnauthorized struct {
}

func (o *GetCartEntriesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries][%d] getCartEntriesUsingGETUnauthorized ", 401)
}

func (o *GetCartEntriesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCartEntriesUsingGETForbidden creates a GetCartEntriesUsingGETForbidden with default headers values
func NewGetCartEntriesUsingGETForbidden() *GetCartEntriesUsingGETForbidden {
	return &GetCartEntriesUsingGETForbidden{}
}

/*GetCartEntriesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCartEntriesUsingGETForbidden struct {
}

func (o *GetCartEntriesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries][%d] getCartEntriesUsingGETForbidden ", 403)
}

func (o *GetCartEntriesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCartEntriesUsingGETNotFound creates a GetCartEntriesUsingGETNotFound with default headers values
func NewGetCartEntriesUsingGETNotFound() *GetCartEntriesUsingGETNotFound {
	return &GetCartEntriesUsingGETNotFound{}
}

/*GetCartEntriesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCartEntriesUsingGETNotFound struct {
}

func (o *GetCartEntriesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/users/{userId}/carts/{cartId}/entries][%d] getCartEntriesUsingGETNotFound ", 404)
}

func (o *GetCartEntriesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
