// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
	"golang.org/x/net/context"
)

// NewCreateAndSetAddressUsingPOST1Params creates a new CreateAndSetAddressUsingPOST1Params object
// with the default values initialized.
func NewCreateAndSetAddressUsingPOST1Params() *CreateAndSetAddressUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &CreateAndSetAddressUsingPOST1Params{
		Fields: &fieldsDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateAndSetAddressUsingPOST1ParamsWithTimeout creates a new CreateAndSetAddressUsingPOST1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateAndSetAddressUsingPOST1ParamsWithTimeout(timeout time.Duration) *CreateAndSetAddressUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &CreateAndSetAddressUsingPOST1Params{
		Fields: &fieldsDefault,

		timeout: timeout,
	}
}

// NewCreateAndSetAddressUsingPOST1ParamsWithContext creates a new CreateAndSetAddressUsingPOST1Params object
// with the default values initialized, and the ability to set a context for a request
func NewCreateAndSetAddressUsingPOST1ParamsWithContext(ctx context.Context) *CreateAndSetAddressUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &CreateAndSetAddressUsingPOST1Params{
		Fields: &fieldsDefault,

		Context: ctx,
	}
}

// NewCreateAndSetAddressUsingPOST1ParamsWithHTTPClient creates a new CreateAndSetAddressUsingPOST1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateAndSetAddressUsingPOST1ParamsWithHTTPClient(client *http.Client) *CreateAndSetAddressUsingPOST1Params {
	var (
		fieldsDefault = string("DEFAULT")
	)
	return &CreateAndSetAddressUsingPOST1Params{
		Fields:     &fieldsDefault,
		HTTPClient: client,
	}
}

/*CreateAndSetAddressUsingPOST1Params contains all the parameters to send to the API endpoint
for the create and set address using p o s t 1 operation typically these are written to a http.Request
*/
type CreateAndSetAddressUsingPOST1Params struct {

	/*Address
	  Request body parameter that contains details such as the customer's first name (firstName), the customer's last name (lastName), the customer's title (titleCode), the country (country.isocode), the first part of the address (line1), the second part of the address (line2), the town (town), the postal code (postalCode), and the region (region.isocode).

	The DTO is in XML or .json format.

	*/
	Address *models.AddressWsDTO
	/*BaseSiteID
	  Base site identifier

	*/
	BaseSiteID string
	/*CartID
	  Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart

	*/
	CartID string
	/*Fields
	  Response configuration. This is the list of fields that should be returned in the response body.

	*/
	Fields *string
	/*UserID
	  User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithTimeout(timeout time.Duration) *CreateAndSetAddressUsingPOST1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithContext(ctx context.Context) *CreateAndSetAddressUsingPOST1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithHTTPClient(client *http.Client) *CreateAndSetAddressUsingPOST1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddress adds the address to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithAddress(address *models.AddressWsDTO) *CreateAndSetAddressUsingPOST1Params {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetAddress(address *models.AddressWsDTO) {
	o.Address = address
}

// WithBaseSiteID adds the baseSiteID to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithBaseSiteID(baseSiteID string) *CreateAndSetAddressUsingPOST1Params {
	o.SetBaseSiteID(baseSiteID)
	return o
}

// SetBaseSiteID adds the baseSiteId to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetBaseSiteID(baseSiteID string) {
	o.BaseSiteID = baseSiteID
}

// WithCartID adds the cartID to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithCartID(cartID string) *CreateAndSetAddressUsingPOST1Params {
	o.SetCartID(cartID)
	return o
}

// SetCartID adds the cartId to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetCartID(cartID string) {
	o.CartID = cartID
}

// WithFields adds the fields to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithFields(fields *string) *CreateAndSetAddressUsingPOST1Params {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetFields(fields *string) {
	o.Fields = fields
}

// WithUserID adds the userID to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) WithUserID(userID string) *CreateAndSetAddressUsingPOST1Params {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the create and set address using p o s t 1 params
func (o *CreateAndSetAddressUsingPOST1Params) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateAndSetAddressUsingPOST1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Address != nil {
		if err := r.SetBodyParam(o.Address); err != nil {
			return err
		}
	}

	// path param baseSiteId
	if err := r.SetPathParam("baseSiteId", o.BaseSiteID); err != nil {
		return err
	}

	// path param cartId
	if err := r.SetPathParam("cartId", o.CartID); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
