// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetCategoriesUsingGETReader is a Reader for the GetCategoriesUsingGET structure.
type GetCategoriesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCategoriesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCategoriesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCategoriesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCategoriesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCategoriesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCategoriesUsingGETOK creates a GetCategoriesUsingGETOK with default headers values
func NewGetCategoriesUsingGETOK() *GetCategoriesUsingGETOK {
	return &GetCategoriesUsingGETOK{}
}

/*GetCategoriesUsingGETOK handles this case with default header values.

OK
*/
type GetCategoriesUsingGETOK struct {
	Payload *models.CategoryHierarchyWsDTO
}

func (o *GetCategoriesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}][%d] getCategoriesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCategoriesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CategoryHierarchyWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoriesUsingGETUnauthorized creates a GetCategoriesUsingGETUnauthorized with default headers values
func NewGetCategoriesUsingGETUnauthorized() *GetCategoriesUsingGETUnauthorized {
	return &GetCategoriesUsingGETUnauthorized{}
}

/*GetCategoriesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCategoriesUsingGETUnauthorized struct {
}

func (o *GetCategoriesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}][%d] getCategoriesUsingGETUnauthorized ", 401)
}

func (o *GetCategoriesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCategoriesUsingGETForbidden creates a GetCategoriesUsingGETForbidden with default headers values
func NewGetCategoriesUsingGETForbidden() *GetCategoriesUsingGETForbidden {
	return &GetCategoriesUsingGETForbidden{}
}

/*GetCategoriesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCategoriesUsingGETForbidden struct {
}

func (o *GetCategoriesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}][%d] getCategoriesUsingGETForbidden ", 403)
}

func (o *GetCategoriesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCategoriesUsingGETNotFound creates a GetCategoriesUsingGETNotFound with default headers values
func NewGetCategoriesUsingGETNotFound() *GetCategoriesUsingGETNotFound {
	return &GetCategoriesUsingGETNotFound{}
}

/*GetCategoriesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCategoriesUsingGETNotFound struct {
}

func (o *GetCategoriesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}][%d] getCategoriesUsingGETNotFound ", 404)
}

func (o *GetCategoriesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
