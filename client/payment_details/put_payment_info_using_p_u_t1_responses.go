// Code generated by go-swagger; DO NOT EDIT.

package payment_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
)

// PutPaymentInfoUsingPUT1Reader is a Reader for the PutPaymentInfoUsingPUT1 structure.
type PutPaymentInfoUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPaymentInfoUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutPaymentInfoUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPutPaymentInfoUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutPaymentInfoUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutPaymentInfoUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutPaymentInfoUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutPaymentInfoUsingPUT1OK creates a PutPaymentInfoUsingPUT1OK with default headers values
func NewPutPaymentInfoUsingPUT1OK() *PutPaymentInfoUsingPUT1OK {
	return &PutPaymentInfoUsingPUT1OK{}
}

/*PutPaymentInfoUsingPUT1OK handles this case with default header values.

OK
*/
type PutPaymentInfoUsingPUT1OK struct {
}

func (o *PutPaymentInfoUsingPUT1OK) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}][%d] putPaymentInfoUsingPUT1OK ", 200)
}

func (o *PutPaymentInfoUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPaymentInfoUsingPUT1Created creates a PutPaymentInfoUsingPUT1Created with default headers values
func NewPutPaymentInfoUsingPUT1Created() *PutPaymentInfoUsingPUT1Created {
	return &PutPaymentInfoUsingPUT1Created{}
}

/*PutPaymentInfoUsingPUT1Created handles this case with default header values.

Created
*/
type PutPaymentInfoUsingPUT1Created struct {
}

func (o *PutPaymentInfoUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}][%d] putPaymentInfoUsingPUT1Created ", 201)
}

func (o *PutPaymentInfoUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPaymentInfoUsingPUT1Unauthorized creates a PutPaymentInfoUsingPUT1Unauthorized with default headers values
func NewPutPaymentInfoUsingPUT1Unauthorized() *PutPaymentInfoUsingPUT1Unauthorized {
	return &PutPaymentInfoUsingPUT1Unauthorized{}
}

/*PutPaymentInfoUsingPUT1Unauthorized handles this case with default header values.

Unauthorized
*/
type PutPaymentInfoUsingPUT1Unauthorized struct {
}

func (o *PutPaymentInfoUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}][%d] putPaymentInfoUsingPUT1Unauthorized ", 401)
}

func (o *PutPaymentInfoUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPaymentInfoUsingPUT1Forbidden creates a PutPaymentInfoUsingPUT1Forbidden with default headers values
func NewPutPaymentInfoUsingPUT1Forbidden() *PutPaymentInfoUsingPUT1Forbidden {
	return &PutPaymentInfoUsingPUT1Forbidden{}
}

/*PutPaymentInfoUsingPUT1Forbidden handles this case with default header values.

Forbidden
*/
type PutPaymentInfoUsingPUT1Forbidden struct {
}

func (o *PutPaymentInfoUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}][%d] putPaymentInfoUsingPUT1Forbidden ", 403)
}

func (o *PutPaymentInfoUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPaymentInfoUsingPUT1NotFound creates a PutPaymentInfoUsingPUT1NotFound with default headers values
func NewPutPaymentInfoUsingPUT1NotFound() *PutPaymentInfoUsingPUT1NotFound {
	return &PutPaymentInfoUsingPUT1NotFound{}
}

/*PutPaymentInfoUsingPUT1NotFound handles this case with default header values.

Not Found
*/
type PutPaymentInfoUsingPUT1NotFound struct {
}

func (o *PutPaymentInfoUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}][%d] putPaymentInfoUsingPUT1NotFound ", 404)
}

func (o *PutPaymentInfoUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
