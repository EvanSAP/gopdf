// Code generated by go-swagger; DO NOT EDIT.

package miscs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	strfmt "github.com/go-openapi/strfmt"
	models "github.com/gopdf/models"
)

// GetCardTypesUsingGETReader is a Reader for the GetCardTypesUsingGET structure.
type GetCardTypesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCardTypesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCardTypesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCardTypesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCardTypesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCardTypesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCardTypesUsingGETOK creates a GetCardTypesUsingGETOK with default headers values
func NewGetCardTypesUsingGETOK() *GetCardTypesUsingGETOK {
	return &GetCardTypesUsingGETOK{}
}

/*GetCardTypesUsingGETOK handles this case with default header values.

OK
*/
type GetCardTypesUsingGETOK struct {
	Payload *models.CardTypeListWsDTO
}

func (o *GetCardTypesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cardtypes][%d] getCardTypesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetCardTypesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CardTypeListWsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCardTypesUsingGETUnauthorized creates a GetCardTypesUsingGETUnauthorized with default headers values
func NewGetCardTypesUsingGETUnauthorized() *GetCardTypesUsingGETUnauthorized {
	return &GetCardTypesUsingGETUnauthorized{}
}

/*GetCardTypesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCardTypesUsingGETUnauthorized struct {
}

func (o *GetCardTypesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cardtypes][%d] getCardTypesUsingGETUnauthorized ", 401)
}

func (o *GetCardTypesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCardTypesUsingGETForbidden creates a GetCardTypesUsingGETForbidden with default headers values
func NewGetCardTypesUsingGETForbidden() *GetCardTypesUsingGETForbidden {
	return &GetCardTypesUsingGETForbidden{}
}

/*GetCardTypesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetCardTypesUsingGETForbidden struct {
}

func (o *GetCardTypesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cardtypes][%d] getCardTypesUsingGETForbidden ", 403)
}

func (o *GetCardTypesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCardTypesUsingGETNotFound creates a GetCardTypesUsingGETNotFound with default headers values
func NewGetCardTypesUsingGETNotFound() *GetCardTypesUsingGETNotFound {
	return &GetCardTypesUsingGETNotFound{}
}

/*GetCardTypesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetCardTypesUsingGETNotFound struct {
}

func (o *GetCardTypesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /{baseSiteId}/cardtypes][%d] getCardTypesUsingGETNotFound ", 404)
}

func (o *GetCardTypesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
